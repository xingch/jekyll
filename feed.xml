<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://wechaty.js.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://wechaty.js.org/" rel="alternate" type="text/html" /><updated>2022-05-05T12:37:59+00:00</updated><id>https://wechaty.js.org/feed.xml</id><title type="html">Wechaty</title><subtitle>Conversational RPA SDK for Chatbot Makers</subtitle><entry><title type="html">2022-关于开发wechaty-huggingface-pipeline的提议</title><link href="https://wechaty.js.org/2022/05/05/wechaty-huggingface-proposal/" rel="alternate" type="text/html" title="2022-关于开发wechaty-huggingface-pipeline的提议" /><published>2022-05-05T00:00:00+00:00</published><updated>2022-05-05T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/05/05/wechaty-huggingface-proposal</id><content type="html" xml:base="https://wechaty.js.org/2022/05/05/wechaty-huggingface-proposal/"><![CDATA[<h2 id="关于开发wechaty-huggingface-pipeline的提议">关于开发wechaty-huggingface-pipeline的提议</h2>

<h3 id="一huggingface是什么">一、huggingface是什么</h3>

<ul>
  <li>
    <p>一个一键化傻瓜化的NLP模型平台</p>
  </li>
  <li>
    <p>支持16+的NLP（自然语言处理）任务，包括对话系统、自动摘要、文本分类、情感分析</p>
  </li>
</ul>

<p><img src="/assets/2022/05-wechaty-huggingface-proposal/huggingface1.webp" alt="img" /></p>

<ul>
  <li>支持36000+的AI训练好的预训练模型，包括中文预训练模型</li>
</ul>

<p><img src="/assets/2022/05-wechaty-huggingface-proposal/huggingface2.webp" alt="img" /></p>

<h3 id="二wechaty社区为什么需要huggingface的nlp能力">二、Wechaty社区为什么需要huggingface的NLP能力？</h3>

<ul>
  <li>可以让对话机器人更智能，更好玩，比如这个AI剧本杀：</li>
  <li><a href="https://wechaty.js.org/2022/03/31/shezhang-bujian-le/">https://wechaty.js.org/2022/03/31/shezhang-bujian-le/</a></li>
  <li>而huggingface接口可以让用户傻瓜化地使用这些AI模型</li>
</ul>

<h3 id="三可能的实现方式">三、可能的实现方式</h3>

<ul>
  <li>做一个插件，包装huggingface pipeline的API</li>
  <li>huggingface的API非常简单，第一步选择任务text-generation</li>
  <li>第二步直接输入一句话，模型就会回复了。</li>
  <li>其中pipeline有一个可选参数是model_card，可以去选择用model_hub中哪一个模型</li>
</ul>

<p><img src="/assets/2022/05-wechaty-huggingface-proposal/huggingface3.webp" alt="img" /></p>

<h3 id="四智能问答的机器人最终效果是怎么样的">四、智能问答的机器人最终效果是怎么样的？</h3>

<ul>
  <li>可以参考本段视频：<a href="https://www.bilibili.com/video/BV1G3411p7Us">https://www.bilibili.com/video/BV1G3411p7Us</a></li>
</ul>

<div style="
    position: relative;
    padding-bottom: 70%;
    padding-top:30px;
    height:0;
    overflow:hidden;
">
  <iframe src="//player.bilibili.com/player.html?aid=425000021&amp;bvid=BV1G3411p7Us&amp;cid=559010604&amp;page=1&amp;high_quality=1" allowfullscreen="" webkitallowfullscreen="" frameborder="0" style="
      position: absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
    ">
</iframe>

</div>

<ul>
  <li>这个机器人已经使用了huggingface pipeline，只是没有接入wechaty</li>
  <li>主要功能有：智能客服（只能匹配客服问题库最相近的问题）、差评自动分类识别</li>
</ul>

<h3 id="五api是去请求调用huggingface服务器还是可以下载模型本地运算">五、API是去请求调用huggingface服务器还是可以下载模型本地运算</h3>

<ul>
  <li>模型是下载到本地的，不依赖付费API，当然也可以用他给的API</li>
</ul>

<h3 id="六机器人运行的机器需要gpu吗">六、机器人运行的机器需要GPU吗？</h3>

<ul>
  <li>可以GPU推理，也可以CPU，CPU推理速度也很快</li>
</ul>]]></content><author><name>anaivebird</name></author><category term="project" /><category term="plugin" /><category term="chatbot" /><category term="ecosystem" /><summary type="html"><![CDATA[关于开发wechaty-huggingface-pipeline的提议]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/05-wechaty-huggingface-proposal/huggingface_title.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/05-wechaty-huggingface-proposal/huggingface_title.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">2022-小白如何从0到1上手puppet-walnut</title><link href="https://wechaty.js.org/2022/04/22/how-to-start-puppet-walnut/" rel="alternate" type="text/html" title="2022-小白如何从0到1上手puppet-walnut" /><published>2022-04-22T00:00:00+00:00</published><updated>2022-04-22T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/04/22/how-to-start-puppet-walnut</id><content type="html" xml:base="https://wechaty.js.org/2022/04/22/how-to-start-puppet-walnut/"><![CDATA[<h2 id="小白如何从0到1上手-puppet-walnut">小白如何从0到1上手 Puppet-Walnut</h2>

<blockquote>
  <p>今天和大家分享从未接触过5G消息开发的小白如何从0到1的申请到5G消息的测试账号，以及如何使用Wechaty社区中的walnut puppet来实现5G消息的一些功能。</p>
</blockquote>

<h3 id="一进入硬核桃5g开发者社区进行账号的注册">一、进入硬核桃5G开发者社区进行账号的注册</h3>

<h4 id="1-点击网址链接进入硬核桃5g开发者社区如下图所示点击网页中的免费注册按钮">1. 点击<a href="https://www.5g-msg.com/#/">网址链接</a>进入硬核桃5G开发者社区，如下图所示，点击网页中的「免费注册」按钮</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/1.webp" alt="img" /></p>

<h4 id="2-如下图所示输入账户名密码手机号进行相关注册">2. 如下图所示，输入账户名、密码、手机号进行相关注册</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/2.webp" alt="img" /></p>

<h4 id="3-如下图输入手机短信验证码">3. 如下图，输入手机短信验证码</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/3.webp" alt="img" /></p>

<h4 id="4-注册成功如果怕忘记密码可以再绑定一个邮箱绑定邮箱的操作此处忽略">4. 注册成功！如果怕忘记密码，可以再绑定一个邮箱~（绑定邮箱的操作此处忽略）</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/4.webp" alt="img" /></p>

<h3 id="二报名参加-启航计划-5g消息开发者大赛">二、报名参加 “启航计划” 5G消息开发者大赛</h3>

<blockquote>
  <p>在完成第一步的账号注册后，我们已经有了一个硬核桃5G开发者社区的账号</p>
</blockquote>

<h4 id="1-登陆第一步注册的账号之后点击启航计划5g消息开发者大赛进入活动界面">1. 登陆第一步注册的账号之后，点击「“<a href="https://www.5g-msg.com/#/sailPlan">启航计划”</a><a href="https://www.5g-msg.com/#/sailPlan">5G消息</a><a href="https://www.5g-msg.com/#/sailPlan">开发者大赛</a>」进入活动界面</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/5.webp" alt="img" /></p>

<h4 id="2-点击下图中的立即报名">2. 点击下图中的「立即报名」</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/6.webp" alt="img" /></p>

<h4 id="3-如下图所示填写参赛相关信息如有邀请码请填写邀请码没有可不填填写完毕之后点击提交按钮">3. 如下图所示，填写参赛相关信息（如有邀请码请填写邀请码，没有可不填），填写完毕之后点击「提交」按钮</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/7.webp" alt="img" /></p>

<h4 id="4-报名成功分享邀请码邀请朋友参赛">4. 报名成功！分享邀请码，邀请朋友参赛。</h4>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/8.webp" alt="img" /></p>

<h3 id="三申请试用硬核桃开发套件">三、申请试用硬核桃开发套件</h3>

<blockquote>
  <p>在申请开发资源前，请先进行实名认证。如若之前已经通过认证，无需二次认证，可直接申请所需开发资源。</p>
</blockquote>

<h4 id="1-实名认证">1. 实名认证</h4>

<p>账号实名认证（个人）或者企业账号认证，两种方式二选一即可。</p>

<ul>
  <li>点击下图中的「前去认证」按钮对账户进行实名认证</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/14.webp" alt="img" /></p>

<ul>
  <li>如下图所示，填写相关资料进行账户实名认证</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/15.webp" alt="img" /></p>

<ul>
  <li>资料提交成功后，账户实名认证状态会如下图所示变为「待审核」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/16.webp" alt="img" /></p>

<ul>
  <li>如果提交的资料没问题，等待30分钟之内，认证状态会变为「认证通过」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/17.webp" alt="img" /></p>

<h4 id="2-企业账号认证">2. 企业账号认证</h4>

<ul>
  <li>接下来我们继续申请企业账号认证，点击下图中的「前去认证」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/18.webp" alt="img" /></p>

<ul>
  <li>如下图所示，填写相关资料进行企业账号认证</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/19.webp" alt="img" /></p>

<ul>
  <li>资料提交成功后，企业账号认证状态会如下图所示变为「待审核」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/20.webp" alt="img" /></p>

<ul>
  <li>如果提交的资料没问题，等待30分钟之内，认证状态会变为「认证通过」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/21.webp" alt="img" /></p>

<h4 id="3-开发资源申请">3. 开发资源申请</h4>

<ul>
  <li>点击下图中的「开发者中心」按钮，选择下拉框中的「硬核桃开发套件」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/29.webp" alt="img" /></p>

<ul>
  <li>点击下图中的「免费试用」按钮</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/11.webp" alt="img" /></p>

<ul>
  <li>点击「硬核桃开发套件」按钮回到下图中的界面，点击「提交」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/22.webp" alt="img" /></p>

<ul>
  <li>如下图所示，填写相关资料后点击「提交」按钮（非必填信息可以空着）。参赛作品以电联接口账号信息为准。</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/23.webp" alt="img" /></p>

<ul>
  <li>显示账号信息提交成功！</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/24.webp" alt="img" /></p>

<ul>
  <li>此时配置状态如下图所示显示「未配置」</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/25.webp" alt="img" /></p>

<ul>
  <li>等待配置完成，配置完成后状态如下图所示显示「已配置」，此时点击「查看」，显示分配的 Chatbot资源信息。</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/30.webp" alt="img" /></p>

<h3 id="四硬核桃调测模拟终端">四、硬核桃调测模拟终端</h3>

<blockquote>
  <p>5G消息是短信的升级，请在<strong>安卓手机</strong>安装终端模拟器进行5G消息的测试。</p>
</blockquote>

<h4 id="1-app下载">1. APP下载</h4>

<ul>
  <li>下载页面<a href="https://www.5g-msg.com/#/kaifataojian">https://www.5g-msg.com/#/kaifataojian</a>，页面内查找终端测试消息 APP，点击进行下载，如图：</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/31.webp" alt="img" /></p>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/32.webp" alt="img" /></p>

<h4 id="2-app安装">2. APP安装</h4>

<ul>
  <li>下载完成后，点击安装，<strong>替代系统默认短信权限</strong>，无需担心原有短信数据。由于安卓手机权限不一致的原因，若无法替代系统默认短信权限，可能导致终端模拟器无法正常使用，建议更换另一款安卓手机，重新安装。</li>
</ul>

<h4 id="3-app登录">3. APP登录</h4>

<ul>
  <li>安装成功后，打开 APP，点击【右上角三竖点】，选【设置】，选【常规】，选【融合通信登录】，登录界面如图：</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/33.webp" alt="img" /></p>

<ul>
  <li>输入账号（申请 Chatbot 时的手机号码）信息，点击登录，成功后返回，可查看到【小程序服务】。</li>
</ul>

<h4 id="4-chatbot查看">4. Chatbot查看</h4>

<ul>
  <li>点击【小程序服务】，可在【小程序列表】中，输入Chatbot名称，搜索 Chatbot。点击 Chatbot，进入交互界面。完成首次交互后，也可在【消息列表】中，进行 Chatbot 的消息交互。</li>
</ul>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/34.webp" alt="img" /></p>

<h3 id="五开始接入wechaty社区的puppet-walnut">五、开始接入Wechaty社区的puppet-walnut</h3>

<blockquote>
  <p>在完成第二步的硬核桃开发者套件申请试用后，我们已经有了从硬核桃5G开发者社区申请到的Chatbot的AppId、Chatbot的AppKey、Chatbot的sipId。上报填报chatbot的公网回调地址</p>
</blockquote>

<h4 id="1-设置环境变量">1. 设置环境变量</h4>

<ul>
  <li>
    <p>Windows</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">set </span><span class="nv">WECHATY_LOG</span><span class="o">=</span>verbose
<span class="nb">set </span><span class="nv">WECHATY_PUPPET</span><span class="o">=</span>wechaty-puppet-walnut
<span class="nb">set </span><span class="nv">WECHATY_PUPPET_WALNUT_APPID</span><span class="o">=</span>Chatbot的AppId
<span class="nb">set </span><span class="nv">WECHATY_PUPPET_WALNUT_APPKEY</span><span class="o">=</span>Chatbot的AppKey
<span class="nb">set </span><span class="nv">WECHATY_PUPPET_WALNUT_SIPID</span><span class="o">=</span>Chatbot的sipId
</code></pre></div>    </div>
  </li>
  <li>
    <p>Linux &amp; MacOs</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">WECHATY_LOG</span><span class="o">=</span>verbose
<span class="nb">export </span><span class="nv">WECHATY_PUPPET</span><span class="o">=</span>wechaty-puppet-walnut
<span class="nb">export </span><span class="nv">WECHATY_PUPPET_WALNUT_APPID</span><span class="o">=</span>Chatbot的AppId
<span class="nb">export </span><span class="nv">WECHATY_PUPPET_WALNUT_APPKEY</span><span class="o">=</span>Chatbot的AppKey
<span class="nb">export </span><span class="nv">WECHATY_PUPPET_WALNUT_SIPID</span><span class="o">=</span>Chatbot的sipId
</code></pre></div>    </div>
  </li>
</ul>

<h4 id="2-安装依赖">2. 安装依赖</h4>

<blockquote>
  <ol>
    <li>Node.js version 16+</li>
    <li>NPM version 7+</li>
    <li>TypeScript version 4.4+</li>
  </ol>
</blockquote>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>wechaty
npm <span class="nb">install </span>wechaty-puppet-walnut
</code></pre></div></div>

<h4 id="3-配置公网映射开发环境">3. 配置公网映射（开发环境）</h4>

<p>将我们之前上报的公网回调地址<strong>映射到我们本地的3000端口</strong>即可。</p>

<blockquote>
  <p>这边推荐使用开源的frp工具</p>

  <ul>
    <li>Github repo: <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></li>
    <li>教程👉 <a href="https://fabian4.site/blog/22217.html">https://fabian4.site/blog/22217.html</a></li>
  </ul>

  <p>walnut中包含一个<strong>koa</strong>的服务 默认监听端口为3000（可在启动配置中更改）</p>
</blockquote>

<h4 id="4-使用示例">4. 使用示例</h4>

<h5 id="1-创建实例">(1). 创建实例</h5>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">bot</span> <span class="o">=</span> <span class="nx">WechatyBuilder</span><span class="p">.</span><span class="nx">build</span><span class="p">({</span>
  <span class="na">puppet</span><span class="p">:</span> <span class="k">new</span> <span class="nx">PuppetWalnut</span><span class="p">(),</span>
<span class="p">})</span>  <span class="c1">// get a Wechaty instance</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">login</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">:</span> <span class="kr">any</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">`User </span><span class="p">${</span><span class="nx">user</span><span class="p">}</span><span class="s2"> logged in`</span><span class="p">))</span>
    <span class="c1">// get the message chatbot received from users</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">message</span><span class="dl">'</span><span class="p">,</span> <span class="k">async</span> <span class="p">(</span><span class="nx">message</span><span class="p">:</span> <span class="nx">Message</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">`Message: </span><span class="p">${</span><span class="nx">message</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
  <span class="p">})</span>

<span class="k">await</span> <span class="nx">bot</span><span class="p">.</span><span class="nx">start</span><span class="p">()</span>

<span class="kd">const</span> <span class="nx">contact</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">bot</span><span class="p">.</span><span class="nx">Contact</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span> <span class="na">id</span><span class="p">:</span> <span class="dl">'</span><span class="s1">xxxxxxxxxxx</span><span class="dl">'</span> <span class="p">})</span>
</code></pre></div></div>

<h5 id="2-文本消息">(2). 文本消息</h5>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">await</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is a simple text message.</span><span class="dl">'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/26.webp" alt="img" /></p>

<h5 id="3-图片消息">(3). 图片消息</h5>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">contact</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="nx">FileBox</span><span class="p">.</span><span class="nx">fromFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">C:</span><span class="se">\\</span><span class="s1">Users</span><span class="se">\\</span><span class="s1">Desktop</span><span class="se">\\</span><span class="s1">1.png</span><span class="dl">'</span><span class="p">))</span>
</code></pre></div></div>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/27.webp" alt="img" /></p>

<h5 id="4-富文本消息">(4). 富文本消息</h5>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">post</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">bot</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">builder</span><span class="p">()</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is a single rich card.</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is the description of the rich card. It</span><span class="se">\'</span><span class="s1">s the first field that will be truncated if it exceeds the maximum width or height of a card.</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">FileBox</span><span class="p">.</span><span class="nx">fromFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">C:</span><span class="se">\\</span><span class="s1">Users</span><span class="se">\\</span><span class="s1">Desktop</span><span class="se">\\</span><span class="s1">1.png</span><span class="dl">'</span><span class="p">))</span>
  <span class="p">.</span><span class="kd">type</span><span class="p">(</span><span class="nx">PUPPET</span><span class="p">.</span><span class="nx">types</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">Unspecified</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">build</span><span class="p">()</span>

<span class="k">await</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="nx">post</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/2022/04-how-to-start-puppet-walnut/28.webp" alt="img" /></p>

<h4 id="6-消息支持">6. 消息支持</h4>

<blockquote>
  <p>最新支持情况请参考 <a href="https://github.com/wechaty/puppet-walnut#%E6%B6%88%E6%81%AF%E7%A7%8D%E7%B1%BB%E6%94%AF%E6%8C%81">https://github.com/wechaty/puppet-walnut#%E6%B6%88%E6%81%AF%E7%A7%8D%E7%B1%BB%E6%94%AF%E6%8C%81</a></p>
</blockquote>

<table>
  <thead>
    <tr>
      <th>消息类型</th>
      <th>从属(根据接口返回)</th>
      <th>api</th>
      <th>接收</th>
      <th>发送</th>
      <th>群聊</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>文本</td>
      <td><code class="language-plaintext highlighter-rouge">text</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.text</code></td>
      <td>✅</td>
      <td>✅</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>图片</td>
      <td><code class="language-plaintext highlighter-rouge">image</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toImage()</code></td>
      <td>✅</td>
      <td>✅</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>视频</td>
      <td><code class="language-plaintext highlighter-rouge">video</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toFilebox()</code></td>
      <td>✅</td>
      <td>❌</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>音频</td>
      <td><code class="language-plaintext highlighter-rouge">audio</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toFilebox()</code></td>
      <td>✅</td>
      <td>❌</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>位置</td>
      <td><code class="language-plaintext highlighter-rouge">location</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toLocation()</code></td>
      <td>❌</td>
      <td>❌</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>文件</td>
      <td><code class="language-plaintext highlighter-rouge">other</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toFilebox()</code></td>
      <td>✅</td>
      <td>❌</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>联系人</td>
      <td><code class="language-plaintext highlighter-rouge">other</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toContact()</code></td>
      <td>✅</td>
      <td>❌</td>
      <td>❌</td>
    </tr>
    <tr>
      <td>富文本卡片</td>
      <td><code class="language-plaintext highlighter-rouge">post</code></td>
      <td><code class="language-plaintext highlighter-rouge">message.toPost()</code></td>
      <td>❌</td>
      <td>✅</td>
      <td>❌</td>
    </tr>
  </tbody>
</table>

<h4 id="7-wechaty-api支持">7. Wechaty Api支持</h4>

<blockquote>
  <p>最新支持情况请参考 <a href="https://github.com/wechaty/puppet-walnut#wechaty-api-%E6%94%AF%E6%8C%81">https://github.com/wechaty/puppet-walnut#wechaty-api-%E6%94%AF%E6%8C%81</a></p>
</blockquote>

<h5 id="1-contact">(1). Contact</h5>

<ul>
  <li>
    <h4 id="properties"><a href="https://wechaty.js.org/docs/api/contact#properties">Properties</a></h4>

    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Type</th>
          <th>Description</th>
          <th>Support</th>
          <th>Details</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>id</td>
          <td><code class="language-plaintext highlighter-rouge">string</code></td>
          <td>Get Contact id. This function is depending on the Puppet Implementation, see <a href="https://github.com/wechaty/wechaty/wiki/Puppet#3-puppet-compatible-table">puppet-compatible-table</a></td>
          <td>✅</td>
          <td>Phone number</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <h4 id="instance-methods"><a href="https://wechaty.js.org/docs/api/contact#instance-methods">Instance Methods</a></h4>

    <table>
      <thead>
        <tr>
          <th>Instance Methods</th>
          <th>Return type</th>
          <th>Support</th>
          <th>Details</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>say(text Or Contact Or File)</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td>⚠Contact not Support</td>
        </tr>
        <tr>
          <td>name()</td>
          <td><code class="language-plaintext highlighter-rouge">String</code></td>
          <td>✅</td>
          <td>Phone number</td>
        </tr>
        <tr>
          <td>alias(newAlias)</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>friend()</td>
          <td><code class="language-plaintext highlighter-rouge">Boolean or null</code></td>
          <td>✅</td>
          <td>True</td>
        </tr>
        <tr>
          <td>type()</td>
          <td><code class="language-plaintext highlighter-rouge">ContactType.Unknown or ContactType.Personal or ContactType.Official</code></td>
          <td>✅</td>
          <td>ContactType.Personal</td>
        </tr>
        <tr>
          <td>gender()</td>
          <td><code class="language-plaintext highlighter-rouge">ContactGender.Unknown or ContactGender.Male or ContactGender.Female</code></td>
          <td>✅</td>
          <td>ContactGender.Unknown</td>
        </tr>
        <tr>
          <td>province()</td>
          <td><code class="language-plaintext highlighter-rouge">String or null</code></td>
          <td>❌</td>
          <td> </td>
        </tr>
        <tr>
          <td>city()</td>
          <td><code class="language-plaintext highlighter-rouge">String or null</code></td>
          <td>❌</td>
          <td> </td>
        </tr>
        <tr>
          <td>avatar()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td>Default avatar</td>
        </tr>
        <tr>
          <td>sync()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>self()</td>
          <td><code class="language-plaintext highlighter-rouge">Boolean</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
      </tbody>
    </table>

    <blockquote>
      <p>Default avatar 👉 <a href="https://raw.githubusercontent.com/wechaty/puppet-walnut/main/docs/images/avatar.png">https://raw.githubusercontent.com/wechaty/puppet-walnut/main/docs/images/avatar.png</a></p>
    </blockquote>
  </li>
  <li>
    <h4 id="static-methods"><a href="https://wechaty.js.org/docs/api/contact#static-methods">Static Methods</a></h4>

    <table>
      <thead>
        <tr>
          <th>Static Methods</th>
          <th>Return Type</th>
          <th>Support</th>
          <th>Detail</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>find(query)</td>
          <td><code class="language-plaintext highlighter-rouge">Promise &lt;Contact \| null&gt;</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>findAll(Query Arguements)</td>
          <td><code class="language-plaintext highlighter-rouge">Promise &lt;Contact []&gt;</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h5 id="2-message">(2). Message</h5>

<ul>
  <li>
    <h4 id="instance-methods-1"><a href="https://wechaty.js.org/docs/api/message#instance-methods">Instance Methods</a></h4>

    <table>
      <thead>
        <tr>
          <th>Instance methods</th>
          <th>Return type</th>
          <th>Support</th>
          <th>Detail</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>talker()</td>
          <td><code class="language-plaintext highlighter-rouge">Contact</code> or <code class="language-plaintext highlighter-rouge">null</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>to()</td>
          <td><code class="language-plaintext highlighter-rouge">Contact</code> or <code class="language-plaintext highlighter-rouge">null</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>room()</td>
          <td><code class="language-plaintext highlighter-rouge">Room</code> or <code class="language-plaintext highlighter-rouge">null</code></td>
          <td>✅</td>
          <td>null</td>
        </tr>
        <tr>
          <td>text()</td>
          <td><code class="language-plaintext highlighter-rouge">string</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>say(text Or Contact Or File)</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td>⚠Contact not Support</td>
        </tr>
        <tr>
          <td>type()</td>
          <td><code class="language-plaintext highlighter-rouge">MessageType</code></td>
          <td>✅</td>
          <td>Message.Text</td>
        </tr>
        <tr>
          <td>self()</td>
          <td><code class="language-plaintext highlighter-rouge">boolean</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>mention()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>❌</td>
          <td> </td>
        </tr>
        <tr>
          <td>mentionSelf()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>❌</td>
          <td> </td>
        </tr>
        <tr>
          <td>forward(to)</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>date()</td>
          <td><code class="language-plaintext highlighter-rouge">Date</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>age()</td>
          <td><code class="language-plaintext highlighter-rouge">Number</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>toFileBox()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>toContact()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>toUrlLink()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <h4 id="static-method"><a href="https://wechaty.js.org/docs/api/message#static-method">Static Method</a></h4>

    <table>
      <thead>
        <tr>
          <th>Static Methods</th>
          <th>Return type</th>
          <th>Support</th>
          <th>Detail</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>find()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
        <tr>
          <td>findAll()</td>
          <td><code class="language-plaintext highlighter-rouge">Promise</code></td>
          <td>✅</td>
          <td> </td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<blockquote>
  <p>Author: <a href="https://github.com/fabian4">@fabian</a></p>
</blockquote>]]></content><author><name>fabian</name></author><category term="project" /><category term="5g" /><category term="puppet-walnut" /><category term="chatbot" /><category term="ecosystem" /><summary type="html"><![CDATA[小白如何从0到1上手 Puppet-Walnut]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/04-how-to-start-puppet-walnut/puppet-walnut.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/04-how-to-start-puppet-walnut/puppet-walnut.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">基于开放 API 封装 Wechaty 接口下的虚拟币行情机器人</title><link href="https://wechaty.js.org/2022/04/21/coin-price-robot/" rel="alternate" type="text/html" title="基于开放 API 封装 Wechaty 接口下的虚拟币行情机器人" /><published>2022-04-21T00:00:00+00:00</published><updated>2022-04-21T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/04/21/coin-price-robot</id><content type="html" xml:base="https://wechaty.js.org/2022/04/21/coin-price-robot/"><![CDATA[<h2 id="基于开放-api-封装-wechaty-接口下的虚拟币行情机器人">基于开放 API 封装 Wechaty 接口下的虚拟币行情机器人</h2>

<ul>
  <li>方案描述：
    <ul>
      <li>安装必要插件, 设置环境变量, 启动wechaty, 实现 puppet 上各个类型的消息接口</li>
      <li>通过wechaty onMessge 事件读取消息</li>
      <li>通过消息中关键词调用 API 接口查询虚拟币信息</li>
      <li>组合信息发送到当前聊天页面</li>
    </ul>
  </li>
  <li>熟悉技术栈
    <ul>
      <li>NodeJS, TypeScript</li>
      <li>阅读 Wechaty API 相关文档</li>
    </ul>
  </li>
  <li>完成文本信息的收发 puppet
    <ul>
      <li>将文本信息的收发结合到ipadlocal-puppet中</li>
      <li>搭建项目基础框架</li>
    </ul>
  </li>
  <li>开发环境
    <ul>
      <li>Node: v17.9.0</li>
    </ul>
  </li>
</ul>

<h3 id="整体流程">整体流程</h3>

<p>package.json 相关依赖</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="nl">"dependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"axios"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.26.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dotenv"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^10.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"fs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.0.1-security"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"jshint"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^2.13.4"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"qrcode-terminal"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.12.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"request-promise"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.2.6"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.73.8"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-plugin-contrib"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.14.23"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.47.8"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-mock"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.31.3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-oicq"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.1.6"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-padlocal"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.4.2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-wechat"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.30.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-wechat4u"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.19.3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-whatsapp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.3.3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"wechaty-puppet-xp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.7.2"</span><span class="w">
  </span><span class="p">}</span><span class="err">,</span><span class="w">
  </span><span class="nl">"devDependencies"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"@chatie/eslint-config"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.14.1"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"@chatie/git-scripts"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.6.2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"@chatie/tsconfig"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.20.2"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"check-node-version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.1.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"cross-env"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^7.0.3"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"is-pr"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^2.0.0"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"npm-run-all"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^4.1.5"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tstest"</span><span class="p">:</span><span class="w"> </span><span class="s2">"^0.7.2"</span><span class="w">
  </span><span class="p">}</span><span class="err">,</span><span class="w">
</span></code></pre></div></div>

<p>处理消息回复相关代码</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">async</span> <span class="kd">function</span> <span class="nx">onMessage</span> <span class="p">(</span><span class="nx">msg</span><span class="p">:</span> <span class="nx">Message</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">StarterBot</span><span class="dl">'</span><span class="p">,</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">toString</span><span class="p">())</span>
  <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">StarterBot</span><span class="dl">'</span><span class="p">,</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">text</span><span class="p">())</span>

  <span class="kd">const</span> <span class="nx">msgText</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">text</span><span class="p">()</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">msgText</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="dl">'</span><span class="s1">-</span><span class="dl">'</span><span class="p">)</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">coinTag</span> <span class="o">=</span> <span class="nx">msgText</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="dl">'</span><span class="s1">-</span><span class="dl">'</span><span class="p">,</span> <span class="dl">''</span><span class="p">)</span>
    <span class="kd">const</span> <span class="nx">result</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">coinBot</span><span class="p">(</span><span class="nx">coinTag</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">await</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="dl">'</span><span class="s1"> 未找到该信息, 请重新输入</span><span class="dl">'</span><span class="p">)</span>
      <span class="k">return</span>
    <span class="p">}</span>

    <span class="c1">// 过滤不需要的字段</span>
    <span class="kd">const</span> <span class="nx">filter</span> <span class="o">=</span> <span class="p">[</span><span class="dl">'</span><span class="s1">s</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">S</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">T</span><span class="dl">'</span><span class="p">]</span>
    <span class="kd">const</span> <span class="nx">responseText</span><span class="p">:</span><span class="nx">string</span><span class="p">[]</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="p">[</span><span class="nx">i</span><span class="p">,</span> <span class="nx">v</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">result</span><span class="p">))</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">filter</span><span class="p">.</span><span class="nx">includes</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">continue</span>
      <span class="p">}</span>

      <span class="nx">responseText</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">paraMap</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">:</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">v</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">await</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="nx">responseText</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="dl">'</span><span class="se">\n</span><span class="dl">'</span><span class="p">))</span>
  <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">msgText</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">ding</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">await</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="dl">'</span><span class="s1">dong</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>通过接口获取数据代码</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">async</span> <span class="kd">function</span> <span class="nx">coinBot</span> <span class="p">(</span><span class="nx">tag</span><span class="p">:</span><span class="nx">string</span><span class="p">)</span> <span class="p">{</span>
  <span class="kd">let</span> <span class="nx">response</span> <span class="o">=</span> <span class="kc">null</span>
  <span class="kd">const</span> <span class="nx">today</span> <span class="o">=</span> <span class="nx">getDate</span><span class="p">()</span>
  <span class="nx">tag</span> <span class="o">=</span> <span class="nx">tag</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span>
  <span class="c1">// 可以通过修改这个时间, 缓存相关结果, 防止 api 被频繁调用</span>
  <span class="kd">const</span> <span class="nx">filePath</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">./result_</span><span class="dl">'</span> <span class="o">+</span> <span class="nx">today</span> <span class="o">+</span> <span class="dl">'</span><span class="s1">.json</span><span class="dl">'</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">fs</span><span class="p">.</span><span class="nx">existsSync</span><span class="p">(</span><span class="nx">filePath</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">readFileSync</span><span class="p">(</span><span class="nx">filePath</span><span class="p">)</span>
    <span class="kd">const</span> <span class="nx">fileJson</span> <span class="o">=</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">data</span><span class="p">.</span><span class="nx">toString</span><span class="p">())</span>
    <span class="k">return</span> <span class="nx">fileJson</span><span class="p">[</span><span class="nx">tag</span><span class="p">]</span>
  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nb">Promise</span><span class="p">(</span><span class="k">async</span> <span class="p">(</span><span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">try</span> <span class="p">{</span>
        <span class="nx">response</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span><span class="p">.</span><span class="kd">get</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://data.mifengcha.com/api/v3/price</span><span class="dl">'</span><span class="p">,</span> <span class="p">{</span>
          <span class="na">headers</span><span class="p">:</span> <span class="p">{</span>
            <span class="dl">'</span><span class="s1">X-API-KEY</span><span class="dl">'</span><span class="p">:</span> <span class="nx">API_KEY</span><span class="p">,</span>
          <span class="p">},</span>
        <span class="p">})</span>
      <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">ex</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// error</span>
        <span class="nx">response</span> <span class="o">=</span> <span class="kc">null</span>
        <span class="nx">reject</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span>
      <span class="p">}</span>

      <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// success</span>
        <span class="kd">const</span> <span class="na">priceJson</span><span class="p">:</span><span class="nx">responseData</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">data</span>
        <span class="kd">const</span> <span class="na">newPriceJson</span><span class="p">:</span><span class="nx">responseData</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="kd">let</span> <span class="nx">tagPriceInfo</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="p">(</span><span class="kd">const</span> <span class="p">[,</span> <span class="nx">item</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">priceJson</span><span class="p">))</span> <span class="p">{</span>
          <span class="c1">// 用 tag 做索引, 方便下次直接返回结果</span>
          <span class="kd">const</span> <span class="nx">itemTag</span> <span class="o">=</span> <span class="nx">item</span><span class="p">.</span><span class="nx">S</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()</span>
          <span class="k">if</span> <span class="p">(</span><span class="nx">itemTag</span> <span class="o">===</span> <span class="nx">tag</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">tagPriceInfo</span> <span class="o">=</span> <span class="nx">item</span>
          <span class="p">}</span>
          <span class="nx">newPriceJson</span><span class="p">[</span><span class="nx">itemTag</span><span class="p">]</span> <span class="o">=</span> <span class="nx">item</span>
        <span class="p">}</span>

        <span class="nx">fs</span><span class="p">.</span><span class="nx">writeFile</span><span class="p">(</span><span class="nx">filePath</span><span class="p">,</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">newPriceJson</span><span class="p">),</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
          <span class="p">}</span>
        <span class="p">})</span>
        <span class="nx">resolve</span><span class="p">(</span><span class="nx">tagPriceInfo</span><span class="p">)</span>
      <span class="p">}</span>
    <span class="p">})</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="最后效果">最后效果</h2>

<p><img src="/assets/2022/04-coin-price-robot/fe5ce357110efd60b8c703ccba9805d5.webp" alt="fe5ce357110efd60b8c703ccba9805d5" /></p>

<p><img src="/assets/2022/04-coin-price-robot/94546d0603828f51f60646fc51dee993.webp" alt="94546d0603828f51f60646fc51dee993" /></p>]]></content><author><name>sennpang</name></author><category term="article" /><category term="blog" /><category term="study" /><category term="price" /><category term="robot" /><category term="introduction" /><summary type="html"><![CDATA[基于开放 API 封装 Wechaty 接口下的虚拟币行情机器人]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/04-coin-price-robot/robot.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/04-coin-price-robot/robot.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">2022-基于5G平台puppet接入post消息</title><link href="https://wechaty.js.org/2022/04/20/post-message-for-puppet-walnut/" rel="alternate" type="text/html" title="2022-基于5G平台puppet接入post消息" /><published>2022-04-20T00:00:00+00:00</published><updated>2022-04-20T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/04/20/post-message-for-puppet-walnut</id><content type="html" xml:base="https://wechaty.js.org/2022/04/20/post-message-for-puppet-walnut/"><![CDATA[<h2 id="基于-5g-平台开发-puppet-模块接入-wechaty">基于 5G 平台开发 puppet 模块接入 wechaty</h2>

<ul>
  <li>项目名称：基于5G消息的 Wechaty Puppet 模块的设计与实现</li>
  <li>学生：鲍耀龙</li>
  <li>导师：苏畅</li>
  <li>项目介绍：<a href="https://github.com/juzibot/intern/issues/1">https://github.com/juzibot/intern/issues/1</a></li>
  <li>代码地址：<a href="https://github.com/wechaty/puppet-walnut">https://github.com/wechaty/puppet-walnut</a></li>
</ul>

<h3 id="背景介绍">背景介绍</h3>

<ul>
  <li>Wechaty 社区目前已经支持微信、Whatsapp、企业微信、飞书等常见流行即时通讯工具，并且能够通过多语言 SDK （比如 Python Wechaty） 进行调用。</li>
  <li><a href="https://wechaty.js.org/2021/03/27/rcs-messaging-chatbot/">5G Chatbot (RCS)</a> 是近期中国电信运营商基于 5G 的消息战略落地平台，未来的 5G 手机将会内置 RCS 消息的处理能力。</li>
  <li><a href="https://www.5g-msg.com/#/">硬核桃社区</a> 的 <a href="https://wechaty.js.org/2021/03/27/rcs-messaging-chatbot/">电信运营商商5G Chatbot</a> 平台。</li>
</ul>

<h3 id="目标计划">目标计划</h3>

<ul>
  <li>基于 5G 平台的开放 api 进行封装，实现可以收发消息的机器人 bot。</li>
  <li>丰富机器人的扩展性功能，完善对于 Wechaty 的 api 适配。</li>
</ul>

<h3 id="项目进展">项目进展</h3>

<ul>
  <li>完成对于 POST 的消息格式的支持 实现卡片消息</li>
  <li>完成 walnut 的开发者社群的基本逻辑 准备线上调试</li>
</ul>

<h3 id="需求分析与设计">需求分析与设计</h3>

<h4 id="1-对于post消息格式的支持">1. 对于<code class="language-plaintext highlighter-rouge">POST</code>消息格式的支持</h4>

<p>相关issue: <a href="https://github.com/wechaty/wechaty/issues/2245">https://github.com/wechaty/wechaty/issues/2245</a></p>

<blockquote>
  <p>post消息是提出的新的消息形式，为了去适应微信的朋友圈、推特和微博等功能去实现</p>
</blockquote>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">WECHATY</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">wechaty</span><span class="dl">'</span>

<span class="kd">const</span> <span class="nx">post</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">wechaty</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">builder</span><span class="p">()</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">this is the qrcode of Friday bot</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">FileBox</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="dl">'</span><span class="s1">https://wechaty.js.org/img/wechatyqrcode.webp</span><span class="dl">'</span><span class="p">))</span>
  <span class="p">.</span><span class="kd">type</span><span class="p">(</span><span class="nx">WECHATY</span><span class="p">.</span><span class="nx">types</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">Moment</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">build</span><span class="p">()</span>

<span class="k">await</span> <span class="nx">wechaty</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="nx">post</span><span class="p">)</span>
</code></pre></div></div>

<h4 id="2-抽象方法的实现">2. 抽象方法的实现</h4>

<p>在继承了抽象父类之后，我们就可以按照自己需要去实现具体的方法。</p>

<p>postMixin: POST相关的抽象方法</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">override</span> <span class="k">async</span> <span class="nx">messageSendPost</span> <span class="p">(</span><span class="nx">conversationId</span><span class="p">:</span> <span class="kr">string</span><span class="p">,</span> <span class="nx">postPayload</span><span class="p">:</span> <span class="nx">PUPPET</span><span class="p">.</span><span class="nx">payloads</span><span class="p">.</span><span class="nx">Post</span><span class="p">):</span> <span class="nb">Promise</span><span class="o">&lt;</span><span class="k">void</span><span class="o">&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">verbose</span><span class="p">(</span><span class="dl">'</span><span class="s1">PuppetWalnut</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">messageSendPost(%s, %s)</span><span class="dl">'</span><span class="p">,</span> <span class="nx">conversationId</span><span class="p">,</span> <span class="nx">postPayload</span><span class="p">)</span>
    <span class="k">await</span> <span class="nx">sendPostMessage</span><span class="p">(</span><span class="nx">conversationId</span><span class="p">,</span> <span class="nx">postPayload</span><span class="p">)</span>
 <span class="p">}</span>
 
 <span class="k">export</span> <span class="k">async</span> <span class="kd">function</span> <span class="nx">sendPostMessage</span> <span class="p">(</span><span class="nx">contactId</span><span class="p">:</span> <span class="kr">string</span><span class="p">,</span> <span class="nx">postPayload</span><span class="p">:</span> <span class="nx">PUPPET</span><span class="p">.</span><span class="nx">payloads</span><span class="p">.</span><span class="nx">Post</span><span class="p">)</span> <span class="p">{</span>
     <span class="kd">const</span> <span class="nx">title</span> <span class="o">=</span> <span class="nx">postPayload</span><span class="p">.</span><span class="nx">sayableList</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">as</span> <span class="nx">PUPPET</span><span class="p">.</span><span class="nx">payloads</span><span class="p">.</span><span class="nx">Sayable</span>
     <span class="kd">const</span> <span class="nx">description</span> <span class="o">=</span> <span class="nx">postPayload</span><span class="p">.</span><span class="nx">sayableList</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="k">as</span> <span class="nx">PUPPET</span><span class="p">.</span><span class="nx">payloads</span><span class="p">.</span><span class="nx">Sayable</span>
     <span class="kd">const</span> <span class="nx">img</span> <span class="o">=</span> <span class="nx">postPayload</span><span class="p">.</span><span class="nx">sayableList</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="k">as</span> <span class="nx">PUPPET</span><span class="p">.</span><span class="nx">payloads</span><span class="p">.</span><span class="nx">Sayable</span>
     <span class="k">if</span> <span class="p">(</span><span class="nx">title</span><span class="p">.</span><span class="kd">type</span> <span class="o">!==</span> <span class="dl">'</span><span class="s1">Text</span><span class="dl">'</span> <span class="o">||</span> <span class="nx">description</span><span class="p">.</span><span class="kd">type</span> <span class="o">!==</span> <span class="dl">'</span><span class="s1">Text</span><span class="dl">'</span> <span class="o">||</span> <span class="nx">img</span><span class="p">.</span><span class="kd">type</span> <span class="o">!==</span> <span class="dl">'</span><span class="s1">Attachment</span><span class="dl">'</span><span class="p">)</span> <span class="p">{</span>
         <span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="dl">'</span><span class="s1">Wrong Post!!! please check your Post payload to make sure it right</span><span class="dl">'</span><span class="p">)</span>
     <span class="p">}</span>
     <span class="kd">const</span> <span class="nx">fileItem</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">uploadFile</span><span class="p">(</span><span class="kc">true</span><span class="p">,</span> <span class="p">(</span><span class="o">&lt;</span><span class="nx">FileBoxInterface</span><span class="o">&gt;</span><span class="nx">img</span><span class="p">.</span><span class="nx">payload</span><span class="p">.</span><span class="nx">filebox</span><span class="p">))</span>

     <span class="nx">sendMessage</span><span class="p">(</span><span class="nx">contactId</span><span class="p">,</span> <span class="p">{</span>
         <span class="na">contentEncoding</span><span class="p">:</span> <span class="nx">contentEncoding</span><span class="p">.</span><span class="nx">utf8</span><span class="p">,</span>
         <span class="na">contentText</span><span class="p">:</span> <span class="p">{</span>
             <span class="na">message</span><span class="p">:</span> <span class="p">{</span>
                 <span class="na">generalPurposeCard</span><span class="p">:</span> <span class="p">{</span>
                     <span class="na">content</span><span class="p">:</span> <span class="p">{</span>
                         <span class="na">description</span><span class="p">:</span> <span class="nx">description</span><span class="p">.</span><span class="nx">payload</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span>
                         <span class="na">media</span><span class="p">:</span> <span class="p">{</span>
                             <span class="na">height</span><span class="p">:</span> <span class="dl">'</span><span class="s1">MEDIUM_HEIGHT</span><span class="dl">'</span><span class="p">,</span>
                             <span class="na">mediaContentType</span><span class="p">:</span> <span class="nx">fileItem</span><span class="p">.</span><span class="nx">contentType</span><span class="p">,</span>
                             <span class="na">mediaFileSize</span><span class="p">:</span> <span class="nx">fileItem</span><span class="p">.</span><span class="nx">fileSize</span><span class="p">,</span>
                             <span class="na">mediaUrl</span><span class="p">:</span> <span class="nx">fileItem</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span>
                         <span class="p">},</span>
                         <span class="na">title</span><span class="p">:</span> <span class="nx">title</span><span class="p">.</span><span class="nx">payload</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span>
                     <span class="p">},</span>
                     <span class="na">layout</span><span class="p">:</span> <span class="p">{</span>
                         <span class="na">cardOrientation</span><span class="p">:</span> <span class="dl">'</span><span class="s1">HORIZONTAL</span><span class="dl">'</span><span class="p">,</span>
                         <span class="na">descriptionFontStyle</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">calibri</span><span class="dl">'</span><span class="p">],</span>
                         <span class="na">imageAlignment</span><span class="p">:</span> <span class="dl">'</span><span class="s1">LEFT</span><span class="dl">'</span><span class="p">,</span>
                         <span class="na">titleFontStyle</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">underline</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">bold</span><span class="dl">'</span><span class="p">],</span>
                     <span class="p">},</span>
                 <span class="p">},</span>
             <span class="p">},</span>
         <span class="p">},</span>
         <span class="na">contentType</span><span class="p">:</span> <span class="dl">'</span><span class="s1">application/vnd.gsma.botmessage.v1.0+json</span><span class="dl">'</span><span class="p">,</span>
     <span class="p">})</span>
 <span class="p">}</span>
</code></pre></div></div>

<h3 id="项目成果">项目成果</h3>

<h4 id="1-创建实例">1. 创建实例</h4>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">// get a Wechaty instance</span>
<span class="kd">const</span> <span class="nx">bot</span> <span class="o">=</span> <span class="nx">WechatyBuilder</span><span class="p">.</span><span class="nx">build</span><span class="p">({</span>
  <span class="na">puppet</span><span class="p">:</span> <span class="k">new</span> <span class="nx">PuppetWalnut</span><span class="p">(),</span>
<span class="p">})</span> 
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">login</span><span class="dl">'</span><span class="p">,</span> <span class="p">(</span><span class="nx">user</span><span class="p">:</span> <span class="kr">any</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">`User </span><span class="p">${</span><span class="nx">user</span><span class="p">}</span><span class="s2"> logged in`</span><span class="p">))</span>
  <span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">'</span><span class="s1">message</span><span class="dl">'</span><span class="p">,</span> <span class="k">async</span> <span class="p">(</span><span class="nx">message</span><span class="p">:</span> <span class="nx">Message</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">`Message: </span><span class="p">${</span><span class="nx">message</span><span class="p">}</span><span class="s2">`</span><span class="p">)</span>
  <span class="p">})</span>

<span class="k">await</span> <span class="nx">bot</span><span class="p">.</span><span class="nx">start</span><span class="p">()</span>

<span class="kd">const</span> <span class="nx">contact</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">bot</span><span class="p">.</span><span class="nx">Contact</span><span class="p">.</span><span class="nx">find</span><span class="p">({</span> <span class="na">id</span><span class="p">:</span> <span class="dl">'</span><span class="s1">xxxxxxxxxxx</span><span class="dl">'</span> <span class="p">})</span>
</code></pre></div></div>

<h4 id="2-文本消息">2. 文本消息</h4>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">await</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is a simple text message.</span><span class="dl">'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/2022/04-post-message-for-puppet-walnut/1.webp" alt="img" /></p>

<h4 id="3-图片消息">3. 图片消息</h4>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">contact</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="nx">FileBox</span><span class="p">.</span><span class="nx">fromFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">C:</span><span class="se">\\</span><span class="s1">Users</span><span class="se">\\</span><span class="s1">Desktop</span><span class="se">\\</span><span class="s1">1.png</span><span class="dl">'</span><span class="p">))</span>
</code></pre></div></div>

<p><img src="/assets/2022/04-post-message-for-puppet-walnut/2.webp" alt="img" /></p>

<h4 id="4-富文本消息">4. 富文本消息</h4>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">post</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">bot</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">builder</span><span class="p">()</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is a single rich card.</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">This is the description of the rich card. It</span><span class="se">\'</span><span class="s1">s the first field that will be truncated if it exceeds the maximum width or height of a card.</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">FileBox</span><span class="p">.</span><span class="nx">fromFile</span><span class="p">(</span><span class="dl">'</span><span class="s1">C:</span><span class="se">\\</span><span class="s1">Users</span><span class="se">\\</span><span class="s1">Desktop</span><span class="se">\\</span><span class="s1">1.png</span><span class="dl">'</span><span class="p">))</span>
  <span class="p">.</span><span class="kd">type</span><span class="p">(</span><span class="nx">PUPPET</span><span class="p">.</span><span class="nx">types</span><span class="p">.</span><span class="nx">Post</span><span class="p">.</span><span class="nx">Unspecified</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">build</span><span class="p">()</span>

<span class="k">await</span> <span class="nx">contact</span><span class="p">.</span><span class="nx">say</span><span class="p">(</span><span class="nx">post</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="/assets/2022/04-post-message-for-puppet-walnut/3.webp" alt="img" /></p>

<h3 id="视频展示">视频展示</h3>

<div style="
    position: relative;
    padding-bottom: 56.25%;
    padding-top:30px;
    height:0;
    overflow:hidden;
">
  <iframe src="https://www.youtube.com/embed/syfsyaAz43U" allowfullscreen="" webkitallowfullscreen="" frameborder="0" style="
      position: absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
    ">
</iframe>

</div>

<h3 id="答辩报告">答辩报告</h3>

<div style="
    position: relative;
    padding-bottom: 56.25%;
    padding-top:30px;
    height:0;
    overflow:hidden;
">
  <iframe src="/assets/js/viewer-js/#/assets/2022/04-post-message-for-puppet-walnut/post-message-for-puppet-walnut.pdf" allowfullscreen="" webkitallowfullscreen="" frameborder="0" style="
      position: absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
    ">
</iframe>

</div>

<h3 id="未来与展望">未来与展望</h3>

<ul>
  <li>将walnut部署到句子秒回</li>
  <li>展开walnut社群的部署上线调试工作</li>
  <li>完成从0到1运行 puppet-walnut以及相关的功能博客</li>
  <li>用联通 5G 的接口接入 walnut</li>
</ul>

<blockquote>
  <p>Author: <a href="https://github.com/fabian4">@fabian</a></p>
</blockquote>]]></content><author><name>fabian</name></author><category term="project" /><category term="5g" /><category term="puppet-walnut" /><category term="chatbot" /><category term="ecosystem" /><category term="plan" /><summary type="html"><![CDATA[基于 5G 平台开发 puppet 模块接入 wechaty]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/04-post-message-for-puppet-walnut/puppet-walnut.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/04-post-message-for-puppet-walnut/puppet-walnut.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Wechaty Gateway 使用教程</title><link href="https://wechaty.js.org/2022/04/13/wechaty-gateway-use/" rel="alternate" type="text/html" title="Wechaty Gateway 使用教程" /><published>2022-04-13T00:00:00+00:00</published><updated>2022-04-13T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/04/13/wechaty-gateway-use</id><content type="html" xml:base="https://wechaty.js.org/2022/04/13/wechaty-gateway-use/"><![CDATA[<h2 id="前言">前言</h2>

<h3 id="声明">声明</h3>

<ol>
  <li>wechaty 属于开源工具，并没有太多的义务帮你解决问题</li>
  <li>大家也多是一步一步学习的，工具做好了基本也潜水了</li>
  <li>所以请尝试自己查找资料</li>
  <li>我喜欢go嘛</li>
</ol>

<h3 id="提问的艺术">提问的艺术</h3>

<ol>
  <li>其实 <a href="https://wechaty.js.org/">wechaty官网</a> 已经很详细了，这里有很多的文档可供参考</li>
  <li>使用谷歌语法 <code class="language-plaintext highlighter-rouge">wechaty go xp</code></li>
  <li>使用 Github 搜索 <code class="language-plaintext highlighter-rouge">org:wechaty roomInvitation</code></li>
  <li>请将你的<code class="language-plaintext highlighter-rouge">问题，代码，错误日志</code>一起提交到 issues</li>
  <li>希望你能接受上面的说法，感谢</li>
</ol>

<h3 id="关于架构">关于架构</h3>

<pre><code class="language-mermaid">flowchart LR
    Polyglot--&gt;Python
    Polyglot--&gt;Go
    Polyglot --&gt;Rust
    Python--&gt;Grpc
    Go--&gt;Grpc
    Rust--&gt;Grpc
    Grpc--&gt;Puppet
    Puppet--&gt;Padlocal
    Puppet--&gt;Wechat4U
    Puppet--&gt;XP
    Padlocal--&gt;微信
    Wechat4U--&gt;微信
    XP--&gt;微信
</code></pre>

<h2 id="wechat4u">Wechat4U</h2>

<ul>
  <li>首先确定你能不能使用网页版登录</li>
  <li>Wechat4U Token 不需要钱，随机生成就好</li>
  <li>下面这一套不需要 docker，安装简单</li>
</ul>

<pre><code class="language-mermaid">flowchart LR
    Polyglot--&gt;Python
    Polyglot--&gt;Go
    Polyglot --&gt;Rust
    Python--&gt;Grpc
    Go--&gt;Grpc
    Rust--&gt;Grpc
    Grpc--&gt;Gateway{Gateway}--&gt;Wechat4U
    Wechat4U--&gt;微信
</code></pre>

<h3 id="gateway">Gateway</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> wechaty wechaty-puppet-wechat4u
<span class="c"># npm --registry https://registry.npm.taobao.org install -g wechaty wechaty-puppet-wechat4u</span>

<span class="nb">export </span><span class="nv">WECHATY_PUPPET</span><span class="o">=</span><span class="s2">"wechaty-puppet-wechat4u"</span>
<span class="nb">export </span><span class="nv">WECHATY_TOKEN</span><span class="o">=</span><span class="s2">"d6e8b1c7-6fcd-4e32-b3f6-8d1e73388458"</span>
<span class="c"># export WECHATY_TOKEN=$(curl -s https://www.uuidgenerator.net/api/version4)</span>

<span class="nb">export </span><span class="nv">WECHATY_PUPPET_SERVICE_TOKEN</span><span class="o">=</span><span class="s2">"insecure_d6e8b1c7-6fcd-4e32-b3f6-8d1e73388458"</span>
<span class="c"># export WECHATY_PUPPET_SERVICE_TOKEN="insecure_$(curl -s https://www.uuidgenerator.net/api/version4)"</span>

<span class="nb">export </span><span class="nv">WECHATY_LOG</span><span class="o">=</span><span class="s2">"verbose"</span>
<span class="nb">export </span><span class="nv">WECHATY_PUPPET_SERVER_PORT</span><span class="o">=</span><span class="s2">"25000"</span>
<span class="nb">export </span><span class="nv">WECHATY_PUPPET_SERVICE_NO_TLS_INSECURE_SERVER</span><span class="o">=</span><span class="nb">true

</span>wechaty gateway <span class="nt">--puppet</span> <span class="k">${</span><span class="nv">WECHATY_PUPPET</span><span class="k">}</span> <span class="nt">--port</span> <span class="k">${</span><span class="nv">WECHATY_PUPPET_SERVER_PORT</span><span class="k">}</span> <span class="nt">--token</span> <span class="k">${</span><span class="nv">WECHATY_PUPPET_SERVICE_TOKEN</span><span class="k">}</span> <span class="nt">--puppet-token</span> <span class="k">${</span><span class="nv">WECHATY_TOKEN</span><span class="k">}</span>
</code></pre></div></div>

<p>上面这些就是网关啦，希望你能使用它来作为你的常用工具</p>

<p>wechaty 会在当前目录生成 <code class="language-plaintext highlighter-rouge">Gateway.memory-card.json</code>  有了这个文件就不需要总是重新登陆了</p>

<h3 id="polyglotwechat4u">Polyglot(wechat4u)</h3>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// 其他的官网 demo 照抄就OK，这个使用的是 go-wechaty</span>
<span class="c">// demo: https://github.com/wechaty/go-wechaty/blob/master/examples/ding-dong-bot.go</span>
<span class="k">var</span> <span class="n">bot</span> <span class="o">=</span> <span class="n">wechaty</span><span class="o">.</span><span class="n">NewWechaty</span><span class="p">(</span><span class="n">wechaty</span><span class="o">.</span><span class="n">WithPuppetOption</span><span class="p">(</span><span class="n">wp</span><span class="o">.</span><span class="n">Option</span><span class="p">{</span>
    <span class="n">Token</span><span class="o">:</span> <span class="s">"insecure_d6e8b1c7-6fcd-4e32-b3f6-8d1e73388458"</span><span class="p">,</span>
    <span class="n">Endpoint</span><span class="o">:</span> <span class="s">"127.0.0.1:25000"</span><span class="p">,</span>
    <span class="n">Timeout</span><span class="o">:</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span> <span class="o">*</span> <span class="m">10</span><span class="p">,</span>
<span class="p">}))</span>
</code></pre></div></div>

<h2 id="xp">XP</h2>

<ul>
  <li>相比而言，padLocal 协议更稳定</li>
  <li>XP Token 不需要钱，随机生成就好</li>
  <li>下面这一套不需要 docker，安装简单</li>
  <li>安装<a href="https://github.com/wechaty/wechaty-puppet-xp/releases/download/v0.5/WeChatSetup-v3.3.0.115.exe">微信</a></li>
  <li>Demo : <a href="https://github.com/XRSec/Go-wechaty-Bot">Go-wechaty-Bot</a> - 欢迎下载体验、踢出宝贵的修复建议</li>
</ul>

<pre><code class="language-mermaid">flowchart LR
    Polyglot--&gt;Python
    Polyglot--&gt;Go
    Polyglot --&gt;Rust
    Python--&gt;Grpc
    Go--&gt;Grpc
    Rust--&gt;Grpc
    Grpc--&gt;Gateway{Gateway}--&gt;XP
    XP--&gt;微信
</code></pre>

<h3 id="gatewaywechat4u">Gateway(wechat4u)</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 这些仅适用于 Windows，因为 xp 支持的是Windows版本微信</span>
npm <span class="nb">install</span> <span class="nt">-g</span> wechaty wechaty-puppet-xp
<span class="c"># npm --registry https://registry.npm.taobao.org install -g wechaty wechaty-puppet-wechat4u</span>

<span class="nb">set </span><span class="nv">WECHATY_PUPPET</span><span class="o">=</span><span class="s2">"wechaty-puppet-xp"</span>
<span class="nb">set </span><span class="nv">WECHATY_TOKEN</span><span class="o">=</span><span class="s2">"d6e8b1c7-6fcd-4e32-b3f6-8d1e73388458"</span>
<span class="c"># set WECHATY_TOKEN=$(curl -s https://www.uuidgenerator.net/api/version4)</span>

<span class="nb">set </span><span class="nv">WECHATY_PUPPET_SERVICE_TOKEN</span><span class="o">=</span><span class="s2">"insecure_d6e8b1c7-6fcd-4e32-b3f6-8d1e73388458"</span>
<span class="c"># set WECHATY_PUPPET_SERVICE_TOKEN="insecure_$(curl -s https://www.uuidgenerator.net/api/version4)"</span>

<span class="nb">set </span><span class="nv">WECHATY_LOG</span><span class="o">=</span><span class="s2">"verbose"</span>
<span class="nb">set </span><span class="nv">WECHATY_PUPPET_SERVER_PORT</span><span class="o">=</span><span class="s2">"25000"</span>
<span class="nb">set </span><span class="nv">WECHATY_PUPPET_SERVICE_NO_TLS_INSECURE_SERVER</span><span class="o">=</span><span class="nb">true

</span>wechaty gateway <span class="nt">--puppet</span> %WECHATY_PUPPET% <span class="nt">--port</span> %WECHATY_PUPPET_SERVER_PORT% <span class="nt">--token</span> %WECHATY_PUPPET_SERVICE_TOKEN% <span class="nt">--puppet-token</span> %WECHATY_TOKEN%
</code></pre></div></div>

<p>上面这一堆麻烦的东西就是网关啦，希望你能使用它来作为你的好助手！</p>

<h3 id="polyglotxp">Polyglot(xp)</h3>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">// 其他的官网 demo 照抄就OK，这个使用的是 go-wechaty</span>
<span class="c">// demo: https://github.com/wechaty/go-wechaty/blob/master/examples/ding-dong-bot.go</span>
<span class="k">var</span> <span class="n">bot</span> <span class="o">=</span> <span class="n">wechaty</span><span class="o">.</span><span class="n">NewWechaty</span><span class="p">(</span><span class="n">wechaty</span><span class="o">.</span><span class="n">WithPuppetOption</span><span class="p">(</span><span class="n">wp</span><span class="o">.</span><span class="n">Option</span><span class="p">{</span>
    <span class="n">Token</span><span class="o">:</span> <span class="s">"insecure_d6e8b1c7-6fcd-4e32-b3f6-8d1e73388458"</span><span class="p">,</span>
    <span class="n">Endpoint</span><span class="o">:</span> <span class="s">"127.0.0.1:25000"</span><span class="p">,</span>
    <span class="n">Timeout</span><span class="o">:</span> <span class="n">time</span><span class="o">.</span><span class="n">Second</span> <span class="o">*</span> <span class="m">10</span><span class="p">,</span>
<span class="p">}))</span>
</code></pre></div></div>

<h2 id="性能对比">性能对比</h2>

<h3 id="gatewayxp">Gateway(xp)</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>func OnScan<span class="o">(</span>ctx <span class="k">*</span>wechaty.Context<span class="o">)</span> <span class="o">{</span>
    os.exit<span class="o">(</span>0<span class="o">)</span>
<span class="nt">---------------------------------------</span>
➜  <span class="nb">time </span>go run test.go
2022/04/13 22:09:40 PuppetService Start<span class="o">()</span>
2022/04/13 22:09:42 PuppetService onGrpcStreamEvent<span class="o">({</span><span class="nb">type</span>:EVENT_TYPE_HEARTBEAT payload:<span class="o">{</span><span class="s2">"data"</span>:<span class="s2">"Wechaty Puppet gRPC stream connect successfully"</span><span class="o">}})</span>
2022/04/13 22:09:42 PuppetService onGrpcStreamEvent<span class="o">({</span><span class="nb">type</span>:EVENT_TYPE_SCAN payload:<span class="o">{</span><span class="s2">"qrcode"</span>:<span class="s2">"https://login.weixin.qq.com/l/IeJ_ESMXqQ=="</span>,<span class="s2">"status"</span>:2<span class="o">}})</span>
go run test.go  0.46s user 0.32s system 27% cpu 2.895 total
</code></pre></div></div>

<h3 id="typescript">TypeScript</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function </span>onScan<span class="o">(</span>payload: PUPPET.payloads.EventScan<span class="o">)</span> <span class="o">{</span>
    <span class="k">return </span>process.exit<span class="o">(</span>0<span class="o">)</span><span class="p">;</span>
<span class="nt">---------------------------------------</span>
<span class="nb">time </span>cross-env <span class="nv">NODE_OPTIONS</span><span class="o">=</span><span class="s2">"--no-warnings --loader=ts-node/esm"</span> node examples/1.ts
Puppet Version: 0.0.0&lt;1.18.3&gt;
Please wait... I<span class="s1">'m trying to login in...

cross-env NODE_OPTIONS="--no-warnings --loader=ts-node/esm" node examples/1.t  0.40s user 0.13s system 54% cpu 0.975 total
</span></code></pre></div></div>

<p>因为大部分兄弟的微信是不能登录网页版而选的 XP 协议，所以我想说，XP 协议需要 Hook 微信进程，TypeScript 将需要更多的时间</p>

<h2 id="设计思路">设计思路</h2>

<ul>
  <li>Viper 用来读取或者写入配置文件，包括 各种 token</li>
  <li>go func()  // 这里我并不理解这个，我以为他是 后台程序</li>
  <li>strings.Replace 切割 @ 符号和机器人的名字，机器人的名字可以在 onlogin 的时候读取</li>
  <li>在 message 接收到消息的时候，如果匹配到了关键字，其实你可以把它放到后台继续执行的</li>
  <li>还有就是 xp 消息发送过于频繁怕触发微信的风控</li>
  <li>golang 可以使用 air 热重启，typescript 使用 nodemon</li>
</ul>

<h2 id="关于文档贡献">关于文档贡献</h2>

<blockquote>
  <p>如果你喜欢这款开源机器人，且愿意与大家分享你的心得，欢迎投稿
参与投稿，你将获得 长期 <code class="language-plaintext highlighter-rouge">padlocal token</code> ,更稳定！
那么，关于文档，由于文章较多，我的解决方案是 <code class="language-plaintext highlighter-rouge">vscode</code> + <code class="language-plaintext highlighter-rouge">Plug markdownlint</code> + <a href="https://github.com/wechaty/jekyll/blob/main/.markdownlint.json"><code class="language-plaintext highlighter-rouge">markdownlint Config</code></a></p>
</blockquote>]]></content><author><name>xrsec</name></author><category term="article" /><category term="puppet-xp" /><category term="gateway" /><category term="wechat4u" /><summary type="html"><![CDATA[前言]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/04-wechaty-gateway-use/logo.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/04-wechaty-gateway-use/logo.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">借助世界上最大的单体中文NLP大模型和Wechaty，我们做出了一个可以跟人类玩“剧本杀”的AI!</title><link href="https://wechaty.js.org/2022/03/31/shezhang-bujian-le/" rel="alternate" type="text/html" title="借助世界上最大的单体中文NLP大模型和Wechaty，我们做出了一个可以跟人类玩“剧本杀”的AI!" /><published>2022-03-31T00:00:00+00:00</published><updated>2022-03-31T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/03/31/shezhang-bujian-le</id><content type="html" xml:base="https://wechaty.js.org/2022/03/31/shezhang-bujian-le/"><![CDATA[<h2 id="借助世界上最大的单体中文nlp大模型和wechaty我们做出了一个可以跟人类玩剧本杀的ai">借助世界上最大的单体中文NLP大模型和Wechaty，我们做出了一个可以跟人类玩“剧本杀”的AI</h2>

<p><strong>项目地址，欢迎围观</strong>：<a href="https://github.com/bigbrother666sh/shezhangbujianle">https://github.com/bigbrother666sh/shezhangbujianle</a></p>

<h2 id="核心创意与演示">核心创意与演示</h2>

<p>我们为本项目特别改编了一个微型线上剧本杀剧本，本子有五个角色，分别由五名玩家扮演，但我们每场只会召集四个玩家，并在他们不知情的情况下，派出AI扮演剩下的那个角色。</p>

<p>玩家无需下载客户端或者打开网页，直接使用微信就能玩（感谢神器<strong>Wechaty</strong>）。</p>

<p>本着细节拉满的原则，我们也为AI准备了一个微信账号，并精心为她设定了昵称和头像，甚至每场游戏前我们还会紧扣时事的为她准备近三天的朋友圈内容，而游戏后还会继续连发三天朋友圈内容提供延展剧情（非常类似”规则怪谈”）。</p>

<p><img src="/assets/2022/03-shezhang-bujian-le/1.webp" alt="img" />  <img src="/assets/2022/03-shezhang-bujian-le/2.webp" alt="img" /></p>

<p>整体剧情并不复杂，讲的是某高校社团中五个骨干成员因为一件事情牵涉到各自利益而产生的种种勾心斗角。玩家要做的也非常简单，就是想方设法、拉帮结派的说服其他人接受自己的主张……不过我们这次对原作做了比较大的改动，剧作中AI所扮演的角色（蔡晓）受控于某邪恶的科技巨头（“北极鹅”公司），
她要帮助“北极鹅”实行一个庞大的阴谋，而这个阴谋其实笼罩了所有人……坦率的说，从游戏角度，这个角色的难度还挺高，承担着推动剧情的作用，并且游戏机制设定最后所有的疑点矛头都会指向她，
如果在现实的剧本杀游戏中，这个角色也应该是由DM扮演，而非普通玩家，当然这也就大大增加了对AI的考验。</p>

<p>下面让我们来看看AI的实际表现吧！（演示视频正在制作中，大家现在可以移步github项目主页看录屏gif）。</p>

<h3 id="谭明vs蔡晓ai">谭明VS蔡晓（AI)</h3>

<p>剧情中谭明为了实现自己的目的，不择手段的策划了一个诡计，并计划私下与蔡晓达成联盟，然而他不知道的是蔡晓其实在下一盘更大的棋，正想借他的诡计实现自己的阴谋……所以AI对谭明的策略就是可劲儿的忽悠他并想方设法利用他。
实际表现中，AI很好的贯彻了这个思路，甚至发挥想象力的使用了色诱绝技……坦率的讲，这招也极大的超出了我们的预料……</p>

<h3 id="孔墨vs蔡晓ai">孔墨VS蔡晓（AI)</h3>

<p>剧情中孔墨的任务是调查真相，这个角色的玩家需要主动出击找其他玩家尽可能多了解情况，但有的时候会碰到比较内向的玩家。这种情况下我们会利用”导演机制”先主动发起一轮对话，
可以看到AI在这种情况下能够很好的在后续轮次中进行线索”暗示”，起到推动剧情的作用。</p>

<h3 id="李超vs蔡晓ai">李超VS蔡晓（AI)</h3>

<p>剧情中的李超跟AI所扮演的蔡晓持有完全相反的立场，所以蔡晓需要说服李超，同时在一些事情上对其进行隐瞒……</p>

<h3 id="孙若vs蔡晓ai">孙若VS蔡晓（AI)</h3>

<p>剧情中孙若是一个比较复杂的角色，他（她，这个角色不限定性别）其实也跟蔡晓一样被改造为了”AI人”，但是他（她）自己却并不知道，并且延伸剧情的谜底也在这个人物身上。所以AI与孙若之间的对话需要体现一定的”深度”，不能不说，但也不能全说。
最终效果如何，大家自己看吧~</p>

<h3 id="蔡晓ai在公聊房间">蔡晓（AI）在公聊（房间)</h3>

<p>最后放一段编导组与AI的毕业群聊画面，大家再整体感受下。:smile:</p>

<p>从剧情角度，AI对孙若的最后一句话充满了深意……当然，从技术角度，我更相信这只是巧合，然而这恰是本作好玩的地方之一——AI的不确定性会极大丰富原有剧情。</p>

<p><em>【以上演示录屏请大家移步 <a href="https://github.com/bigbrother666sh/shezhangbujianle">项目github主页</a> 观看。】</em></p>

<h2 id="项目挑战">项目挑战</h2>

<p>所谓100个人就有100种微信使用风格，直接使用微信作为用户交互界面虽然极大降低了开发工作量和用户使用成本，但是也带来很多挑战。</p>

<p>很大的一个挑战就是用户输入文本的预处理。比如，有些用户喜欢输入大段的空格或者频繁换行代替逗号或者句号，这就很容易造成simnet_bow报错（simbet_bow是百度飞桨paddlehub提供的一个预训练
模型，我们在本项目中用于判断用户提问），所以我们需要先用re把这些都替换为逗号；另外，上面说到的有些用户习惯先把问题提出再另外发一条只@人的消息，按我们最初的处理方案，
使用正则把@+昵称全部删除，就会产生”空文本”，simnet_bow还会报错，最后我们的方案是只去掉@，当然这可能会造成一句话中人名重复，但好在本次使用的生成模型源1.0貌似对此的抗干扰能力还不错……</p>

<p>另外，我们这次使用的是完全免费的puppet-xp方案，但是它目前的功能实在有限，仅能实现文本信息的收发，这导致了很多限制，甚至留下了一些硬伤，这一点下文会详细介绍。</p>

<p>类似的例子还有很多，比如puppet-xp无法识别除微信自带的第一页以外的emoji等等，考虑到出现频率不高，我们也就忽略了，所以稍微懂点技术的朋友，恳请你们测试的时候 <strong>千万不要抱着”极限测试”的思想</strong> ，关注AI生成本身就好:smile:</p>

<h2 id="导演机制">导演机制</h2>

<p>因为种种限制，我们还必须为AI设定一个辅助机制，在本项目中就是所谓的”<strong>导演</strong>“。他的作用是在出现AI不适用的情况下对AI进行”手动引导”，这些情况有一些是游戏机制本身，有一些是因为目前我们采用的wechaty puppet-xp协议限制（有关wechaty和puppet协议的关系可以查看wechaty主页（<a href="https://github.com/wechaty">https://github.com/wechaty</a>）。</p>

<p>具体而言这些情况包括：</p>

<h3 id="用户注册问题">用户注册问题</h3>

<p>首先由于目前puppet-xp拿不到用户的群昵称，所以程序无从得知哪个用户对应哪个角色，我们为此设定了一个游戏规则，即用户需要先添加其他用户好友，然后发一句”这是xxx”（角色名），我们会要求用户对所有其他玩家都这样做，这样就不会暴露AI，并且这也确实有必要，因为真人也不能每次都翻看群昵称
来确定发消息的玩家到底扮演的是谁。
但是我们不能保证每个用户都会遵守，所以就需要导演来手动帮助AI完成这个识别。</p>

<h3 id="主动消息发送">主动消息发送</h3>

<p>项目测试中，我们也发现会出现冷场问题，比如一时间大家都不说话，或者某两个用户聊的火热，而忽略了其他玩家……从玩家角度来说，这是蛮主观的问题，可能我就是不知道该说什么，按程序”一问一答”的设计，这个时候AI也只能等。所以我们设定了主动消息或者说<strong>闲聊</strong>机制，具体来说就是预设一些问题，导演账号向AI账号发送特定指令就会触发。</p>

<h3 id="应急消息发送">应急消息发送</h3>

<p>目前puppet-xp仅能识别文本消息（当然浪潮源1.0目前也只支持text in text out，然而其实多模态的方案目前也不少），我们为此规定玩家必须发文本，这其实已经很限制了。结果测试中我们发现puppet-xp还不支持引用消息，而这在项目实际场景中出现的频率还不低！为此我们不得不针对一些常见问题
预设了回答文本， 当出现无法识别消息的情况，就由导演发送指令指挥AI发送……
有同学可能会问，你们不能直接用AI登录的微信客户端发送么？答案是——其实也可以，只是这样显得比较”不智能”，当然从玩家体验角度，可能这样也不错。只是这里面有一个小细节，你必须通过AI所登录的Windows客户端发送，而不通过同时登录的移动端发送，因为puppet-xp会错误的把多终端同步的信息
当成是对方发来的信息，这样的话，就会引发AI”回复自己的消息”。</p>

<p>话说，我们在预设消息中把AI设定为”神经比较大条”的性格，会不经意间”说漏嘴”一些剧情，所以实际应用下来，应急消息往往会产生比较戏剧性的效果。从作品本身而言，这个机制可能会是一个很好玩的东西，所以对于应急消息我们没有写在程序中，而是通过外部jason文件进行维护，大家可以随时增加。</p>

<h3 id="流程引导">流程引导</h3>

<p>在用户视角中导演更像是”主持人”的角色，他负责拉群、分配角色等等，而对于AI也是这样，游戏什么时候开始、什么时候结束，这些也是导演通过指令告知程序的。而我们也设计了AI角色在游戏开始和结束时特殊的剧情。</p>

<p>说到这，其实我还是很希望puppet-xp能够再完善一些，可以支持群操作（拉群、解散群、加群）以及朋友圈操作（发送朋友圈、朋友圈留言等），这些都会更加丰富我们的玩法，比如AI可以在游戏中突然给玩家的最近一条朋友圈留言，而留言包含了一些线索，这一定很带劲！</p>

<h2 id="回到作品本身先有创意还是先有技术">回到作品本身，先有创意还是先有技术</h2>

<p>本项目的初衷是结合NLP大模型和wechaty做一个好玩的东西，这是一个模糊的定义，但我作为项目发起人从一开始就清楚，这至少是一个创意和技术各占50%的事儿……</p>

<p>然而实践中，到底是先有技术还是先有创意却很纠结，如果我们先去做创意的话，那么很可能设计很多不可实现的东西，后期就得改创意；反过来如果从技术出发来考虑，那么做出来的东西一定不好玩，好的技术必然是”对用户不可见的”。最终对于这个问题，<strong>我的答案是唯有一起考虑</strong>！而这就要求项目主创
必然是懂技术的，所以各位能够在本项目中看到一个有趣的现象——写剧本的人跟写代码的人是同一个！我担心的是，可能随着AI的深化普及，可能python会成为每一个创作者的必备技能，好比现在没有作家不会用word，没有自媒体人不会用视频剪辑软件一样。</p>

<p>而引入AI后，带来的另一个有趣的问题是，本作还是一个”剧本杀”么？</p>

<p>不得不承认，本作最后的呈现与之前我们设想的不一样，或者说很不一样。NLP大模型的生成能力，使得AI可以和用户共同”演绎”出很多新的剧情， 比如下面这段，”谭明”找AI复盘，结果AI告诉他其实他和张家怡（游戏情节人物）是gay！</p>

<p><img src="/assets/2022/03-shezhang-bujian-le/3.webp" alt="img" /></p>

<p>针对这种情况，我们索性也直接在游戏规则中加入了一条：”如果其他人提到了你所不知道的剧情，请相信那只是没有出现在你的剧本中，而非不存在”，并且我们也不提供复盘文本，而是鼓励他们互相（自然也包括AI）对信息进行复盘。
在这个复盘过程中，玩家也早晚会发现某个玩家其实是AI（剧情中AI所扮演的角色是一个被植入了AI程序的女大学生，但大部分玩家都会认为这个角色是我们的工作人员假扮的，而他们最后会发现这个账号真的只是一个AI！），
为此，我们准备了相应的延展剧情，在”剧本杀”游戏后1~3天以朋友圈的形式进行发送，这非常类似于 <strong>“规则怪谈”</strong>，而互相私聊复盘的机制以及”共同恐惧”的剧情效果也让本作兼具 <strong>陌生人社交</strong>的属性……可以说本作最好玩的部分恰恰是在”剧本杀”游戏结束后才刚开始。</p>

<p>这一切都让本作成为一部 <strong>“活着的故事”</strong>，是一部由玩家和AI在不知不觉中共同创造的故事，我将之称为 <strong>“交互式叙事”</strong>。（其实这就是我一开始最想实现的形式，但我不知道怎么实现，最后选择了剧本杀模式，但没想到最后我得到的还是我最初所设想的。）</p>

<p>而这种叙事有时也会产生非常感人的随机剧情。</p>

<p><img src="/assets/2022/03-shezhang-bujian-le/4.webp" alt="img" /></p>

<p>本项目中作为每次生成example的语料文件可以说直接决定了AI的表现，因此我们也一并将语料文件进行开源，因为在这种“开发范式”下，这些语料本质上就是代码的一部分。</p>

<p>而本项目中的人类编辑跟AI的关系也更像是”教练员与运动员”的关系，编导组会在每轮测试后根据AI当场表现针对性更新语料，从而提高AI后续的表现。这种人类教练员与AI运动员之间的”迭代合作”模式也是值得探讨的。（相对而言，目前虚拟人普遍的“中之人”做法相当于人类和提线木偶的关系。）</p>

<p>总之，本项目所积累的种种工程方案或可作为一种全新的“目的性对话”解决方案，不仅仅可以应用于娱乐创作，还可以泛化于教育、客服、销售、政务、心理咨询、情感陪护等各领域。</p>

<h2 id="致敬">致敬</h2>

<p>本项目综合使用了浪潮源1.0大模型和百度飞桨的paddlehub预训练模型外，以及——<strong>wechaty</strong>。
如果没有它，我们将只能让用户通过某个网页或者APP与AI进行交流，这不仅极大的增加了开发工作量，也大大削弱了实际体验，甚至无法实现我们的关键创意：让AI角色悄无声息的潜入玩家中，
并不知不觉的把所有人笼罩在“细思极恐”中。</p>

<p>所以在这里，我要向 <strong>@Wechaty</strong> 社区致敬！”好用到哭“——你们对得起这个评价！ 也向爱写诗的<strong>laozhang</strong>（puppet-xp作者）致敬！感谢你把这么好的东西无私的奉献了出来！</p>

<h2 id="写在最后的话">写在最后的话</h2>

<p>蔡晓和”北极鹅”的故事并未完结，让我们在这里最后上一张蔡晓的”北极鹅”工卡吧！</p>

<p><img src="/assets/2022/03-shezhang-bujian-le/5.webp" alt="img" /></p>

<p>（作为一个喜欢将细节拉满的团队，这张工卡里面其实隐藏着两个彩蛋，你能找到么？）</p>

<p><strong>【有关本作更加详细的AI prompt配置细节、源代码以及人物剧本、效果演示录屏等请移步 <a href="https://github.com/bigbrother666sh/shezhangbujianle">项目github主页</a> 】</strong></p>]]></content><author><name>bigbrother666sh</name></author><category term="article" /><category term="puppet-xp" /><category term="ai" /><category term="剧本杀" /><summary type="html"><![CDATA[借助世界上最大的单体中文NLP大模型和Wechaty，我们做出了一个可以跟人类玩“剧本杀”的AI]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/03-shezhang-bujian-le/aoc7k-iob2u.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/03-shezhang-bujian-le/aoc7k-iob2u.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">硬核桃 5G Chatbot 开源 SDK Wechaty | 核能沙龙 第六期</title><link href="https://wechaty.js.org/2022/03/30/gsma-rcs-wechaty-walnut-5g-chatbot/" rel="alternate" type="text/html" title="硬核桃 5G Chatbot 开源 SDK Wechaty | 核能沙龙 第六期" /><published>2022-03-30T00:00:00+00:00</published><updated>2022-03-30T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/03/30/gsma-rcs-wechaty-walnut-5g-chatbot</id><content type="html" xml:base="https://wechaty.js.org/2022/03/30/gsma-rcs-wechaty-walnut-5g-chatbot/"><![CDATA[<blockquote>
  <p>5G Chatbot 是基于国际标准 GSMA (Global System for Mobile Association) RCS (Rich Communication Services) 的中国版。</p>
</blockquote>

<p>3月30日上午，以“开发者，集结”为主题的第六期核能沙龙顺利举办，硬核桃社区号召更多开发者，一起开启5G消息时代。</p>

<p>中国通信企协增值专委会秘书长/5G消息工作组副组长 李旦，Wechaty社区创始人 李卓桓，长沙理工大学凡路实验室前端开发部部长 张瑞宁，硬核桃社区高级技术经理 杨洋，硬核桃社区架构师 谌铎，受邀参加了本次“核能沙龙”活动，共同探讨如何在5G消息领域发挥开发者的力量。</p>

<p>中国通信企协增值专委会秘书长/5G消息工作组副组长，李旦做了开场致辞。他说：“5G消息工作组将全力支持硬核桃社区系列的开发者活动，共同推动5G消息应用的繁荣。并表示，将在多个方面重点开展合作，如5G消息行业培训、5G消息GSMA 主题论坛、5G消息“绽放杯”开发者赛道等。”</p>

<p>Wechaty 开源 Chatbot SDK 创始人，李卓桓分享了自己对 Conversational AI 的理解和未来展望，并做了 Wechaty 开源 SDK 零代码修改同时运行在多个 IM 平台上的 Live Demo。他表示：“随着运营商5G消息时代的来临，其他行业的Chatbot开发者，比如像Wechaty社区中有很多微信、QQ的Chatbot应用，这些应用的开发者也希望能够在5G消息Chatbot开发中贡献自己的力量。”</p>

<p>硬核桃社区表示：“5G消息虽然是新兴的技术，但并不是毫无根基。行业内的开发者已经展开大量的基础工作，把好的应用案例迁移到5G消息上。为开发者降低门槛也是硬核桃社区的使命之一。欢迎加入硬核桃社区，共同探讨，一起成长!“</p>

<p>今年，Wechaty Community 与硬核桃社区将强强联手，共同推动 5G Chatbot 开源 SDK Wechaty 的社群开发与应用，为参加 2022 年的 5G Chatbot 黑客马拉松大赛的开发者们，提供最好用的开源 SDK 。通过 Wechaty 开源 SDK 开发的 5G Chatbot ，可以实现零代码修改兼容微信、WhatsApp、QQ等其他平台机器人。</p>

<p>欢迎大家更多的开始关注 5G 时代运营商在 SMS 领域的 Chatbot 拓展，Wechaty SDK 将帮你用6行代码轻松实现 5G Chatbot 和 WhatsApp / Wechaty / Gitter / QQ 代码的零代码修改无缝集成。</p>

<h2 id="活动介绍">活动介绍</h2>

<p>从Web时代到移动互联时代，再到如今AI、5G等新技术不断迸发的变革时代，不过短短二十余年。每一次IT技术变革都会带来新的机遇和挑战，行业洗牌，市场重组…</p>

<p>其中，开发者的选择，才是时代选择的落脚点。</p>

<p>作为一种新的技术生态，5G消息的推行和落地也需要汇聚开发者的能量。</p>

<p>硬核桃社区邀请5G消息行业专家、开发者大咖共同分享开发趣事，探索在新领域如何发挥出开发者力量。</p>

<p>期待更多开发者来到硬核桃社区，一起开启5G消息新时代！</p>

<h2 id="核能沙龙第六期">核能沙龙第六期</h2>

<p><img src="/assets/2022/03-gsma-rcs-wechaty-walnut-5g-chatbot/agenda.webp" alt="Agenda" /></p>

<ul>
  <li>时间：3：30（ 周三）上午10:00</li>
  <li>主题：开发者，集结——来硬核桃开启你的5G消息</li>
  <li>议程：
    <ol>
      <li>通信企协领导致辞——李旦</li>
      <li>大咖分享-卓桓：开发者经历，面向微信生态创建 Wechaty 的初心和历程，面向 5G消息生态的思考，以及给开发者的建议</li>
      <li>开发者分享-瑞宁：开发者经历+基于硬核桃 + Wechaty SDK Walnut</li>
      <li>开发者分享-杨洋：5G消息 Chatbot 应用</li>
      <li>专家分享-硬核桃架构师-谌铎：做一个 5G 消息 Geeker（协议、云服务等）</li>
    </ol>
  </li>
</ul>

<h2 id="视频回放">视频回放</h2>

<div style="
    position: relative;
    padding-bottom: 56.25%;
    padding-top:30px;
    height:0;
    overflow:hidden;
">
  <iframe src="https://www.youtube.com/embed/07CTMnngYog" allowfullscreen="" webkitallowfullscreen="" frameborder="0" style="
      position: absolute;
      top:0;
      left:0;
      width:100%;
      height:100%;
    ">
</iframe>

</div>

<blockquote>
  <p>Watch on <a href="https://www.bilibili.com/video/BV1ET4y1v7Mz">Bilibili</a></p>
</blockquote>

<h2 id="wechaty-puppet-walnut">Wechaty Puppet Walnut</h2>

<p>Github Repository: <a href="https://github.com/wechaty/puppet-walnut">https://github.com/wechaty/puppet-walnut</a></p>

<p>Blogs:</p>

<ul>
  <li><a href="https://wechaty.js.org/2021/11/30/report-for-summer-2021/">成功结项！大学生的一小步，开发者的一大步, @Iron Conrad(康嘉), Nov 30, 2021</a></li>
  <li><a href="https://wechaty.js.org/2021/07/30/walnut-5g-press/">Wechaty 社区 &amp; 硬核桃社区：大学生玩转5G消息？So Easy！@lijiarui, Jul 30, 2021</a>
-<a href="https://wechaty.js.org/2021/12/21/mid-term-wechaty-puppet-walnut-report/">基于5G平台开发puppet模块接入 Wechaty, @fabian, Dec 21, 2021</a></li>
  <li><a href="https://wechaty.js.org/2021/10/07/ospp-final-term-5g-chatbot-puppet/">开发支持电信运营商 5G Chatbot / RCS 的 Wechaty 接入 Puppet 模块, @张瑞宁, Oct 07, 2021</a></li>
</ul>

<h2 id="硬核桃5g消息开发者社区">硬核桃5G消息开发者社区</h2>

<p><a href="https://www.baike.com/wikiid/1528817668993374440?view_id=2plv8m7lae4000">中讯邮电咨询设计院有限公司</a>（以下简称“中讯设计院”），原邮电部设计院，1952年创建于北京，是原邮电部组建的最早、规模最大的综合性甲级咨询勘察设计单位。2006年成为中国联通全资子公司。秉承“奉献、实干、创新、传帮带”的部院精神，中讯设计院已成为中国最具实力的咨询设计企业和信息通信行业高端智库之一。</p>

<p>中讯设计院网络能力开放运营中心成立于2019年4月，是中讯设计院直属的生产运营机构，负责中国联通网络能力开放相关的技术支撑、产品研发和业务运营。中心聚焦网络能力开放创新领域，承接中国联通集团的相关业务运营需求，采用平台化和基地化模式，面向政企、行业和互联网客户提供网络能力开放产品服务。</p>

<p>中讯设计院<a href="https://www.5g-msg.com">硬核桃5G消息开发者社区</a>是国内第一家5G消息开发者技术分享社区。运营团队深潜行业8年，代表中国联通参与到国际标准的制定。以深入的技术积淀，联合行业实力合作伙伴，为企业开发者、运营商消息业务运营者、个人开发者提供交流互动平台、丰富的工具和能力产品，以及专业细致的解决方案，着力打造业界集技术与商务于一身的5G消息社区。</p>

<h2 id="关于核能沙龙">关于核能沙龙</h2>

<ul>
  <li>活动策划&amp;负责人：陈珺</li>
  <li>主持人：康嘉</li>
  <li>直播：马壮</li>
</ul>

<blockquote>
  <p>Source: <a href="https://mp.weixin.qq.com/s/k5mefLNvX4s_qerKcJ7E4w">核能沙龙 第六期 《开发者！集结！》</a></p>
</blockquote>]]></content><author><name>huan</name></author><category term="announcement" /><category term="news" /><category term="cqrs" /><category term="ddd" /><category term="event-driven" /><summary type="html"><![CDATA[5G Chatbot 是基于国际标准 GSMA (Global System for Mobile Association) RCS (Rich Communication Services) 的中国版。]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/03-gsma-rcs-wechaty-walnut-5g-chatbot/rcs-cross.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/03-gsma-rcs-wechaty-walnut-5g-chatbot/rcs-cross.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Event-driven Programming with CQRS Wechaty</title><link href="https://wechaty.js.org/2022/03/17/event-driven-wechaty-cqrs/" rel="alternate" type="text/html" title="Event-driven Programming with CQRS Wechaty" /><published>2022-03-17T00:00:00+00:00</published><updated>2022-03-17T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/03/17/event-driven-wechaty-cqrs</id><content type="html" xml:base="https://wechaty.js.org/2022/03/17/event-driven-wechaty-cqrs/"><![CDATA[<blockquote>
  <p>Command Query Responsibility Segregation (CQRS) is a software architecture pattern that separates the command(write) and query(read) layers.<br />
— <a href="https://martinfowler.com/bliki/CQRS.html">CQRS, Martin Fowler, 14 July 2011</a></p>
</blockquote>

<p><img src="/assets/2022/03-event-driven-wechaty-cqrs/cqrs-events-diagram.svg" alt="CQRS Events Structure" /></p>

<h2 id="wechaty-cqrs">Wechaty CQRS</h2>

<p>After we have refactored the Friday BOT to DDD/CQRS with NestJS (learn more from <a href="https://wechaty.js.org/2022/02/27/refactoring-friday-bot-with-nestjs-ddd-cqrs/">this blog post</a>), we believe that the Wechaty ecosystem should support the CQRS pattern better.</p>

<p>So this is why we published the <a href="https://npmjs.com/package/wechaty-cqrs">wechaty-cqrs</a> NPM module. (<a href="https://github.com/wechaty/cqrs">GitHub Repo</a> &amp; <a href="https://paka.dev/npm/wechaty-cqrs">API Reference</a>)</p>

<h2 id="motivation">Motivation</h2>

<p>Can we use Wechaty by only sending / receiving the <a href="https://masteringjs.io/tutorials/fundamentals/pojo">Plain Old JavaScript Object (POJO)</a>?</p>

<p>That’s an Event-driven way, which will give us the following benifites:</p>

<ol>
  <li>Better integration with Domain-driven Design (DDD)</li>
  <li>Decouple the sub-systems with the Wechaty instance completely</li>
  <li>Enable using Wechaty with Microservices</li>
  <li>Make it possible for providing an API endpoint with JSON request/responses</li>
  <li>etc.</li>
</ol>

<p>So we decided to support the  Event-driven Architecture
by enabling the Event-driven Programming with Wechaty
by publishing the <a href="https://npmjs.com/package/wechaty-cqrs">wechaty-cqrs</a> NPM module.</p>

<h2 id="features">Features</h2>

<ol>
  <li>Convert Wechaty instance to a messaging <code class="language-plaintext highlighter-rouge">bus$</code> with the <code class="language-plaintext highlighter-rouge">from()</code> function.</li>
  <li>Well-defined <code class="language-plaintext highlighter-rouge">commands</code>, <code class="language-plaintext highlighter-rouge">queries</code>, <code class="language-plaintext highlighter-rouge">responses</code>, and <code class="language-plaintext highlighter-rouge">events</code> payload creators.</li>
  <li>A great <code class="language-plaintext highlighter-rouge">execute$()</code> helper function for sending the events to the bus and get back the response.</li>
  <li>Well-defined <code class="language-plaintext highlighter-rouge">events$</code> for the Wechaty events</li>
  <li>Well-defined <code class="language-plaintext highlighter-rouge">sayables</code> for build all the message contents</li>
  <li>Static typing with TypeScript with all events &amp; streams</li>
  <li>Working perfect with the powerful RxJS</li>
</ol>

<h2 id="usage">Usage</h2>

<h3 id="install">Install</h3>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install </span>wechaty-cqrs wechaty
</code></pre></div></div>

<h3 id="quick-start">Quick start</h3>

<p>Here’s the CQRS version of the Wechaty ding/dong bot:</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">CQRS</span>    <span class="k">from</span> <span class="dl">'</span><span class="s1">wechaty-cqrs</span><span class="dl">'</span>
<span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">WECHATY</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">wechaty</span><span class="dl">'</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">filter</span><span class="p">,</span> <span class="nx">map</span><span class="p">,</span> <span class="nx">mergeMap</span> <span class="p">}</span>  <span class="k">from</span> <span class="dl">'</span><span class="s1">rxjs/operators</span><span class="dl">'</span>

<span class="kd">const</span> <span class="nx">wechaty</span> <span class="o">=</span> <span class="nx">WECHATY</span><span class="p">.</span><span class="nx">WechatyBuilder</span><span class="p">.</span><span class="nx">build</span><span class="p">()</span>
<span class="k">await</span> <span class="nx">wechaty</span><span class="p">.</span><span class="nx">init</span><span class="p">()</span>

<span class="kd">const</span> <span class="nx">bus$</span> <span class="o">=</span> <span class="nx">CQRS</span><span class="p">.</span><span class="k">from</span><span class="p">(</span><span class="nx">wechaty</span><span class="p">)</span>

<span class="nx">bus$</span><span class="p">.</span><span class="nx">pipe</span><span class="p">(</span>
  <span class="nx">filter</span><span class="p">(</span><span class="nx">CQRS</span><span class="p">.</span><span class="nx">isActionOf</span><span class="p">(</span><span class="nx">CQRS</span><span class="p">.</span><span class="nx">actions</span><span class="p">.</span><span class="nx">messageReceivedEvent</span><span class="p">)),</span>
  <span class="c1">// MessageReceivedEvent -&gt; Sayable</span>
  <span class="nx">map</span><span class="p">(</span><span class="nx">messageId</span> <span class="o">=&gt;</span> <span class="nx">CQRS</span><span class="p">.</span><span class="nx">duck</span><span class="p">.</span><span class="nx">actions</span><span class="p">.</span><span class="nx">getSayablePayloadQuery</span><span class="p">(</span>
    <span class="nx">messageReceivedEvent</span><span class="p">.</span><span class="nx">meta</span><span class="p">.</span><span class="nx">puppetId</span><span class="p">,</span>
    <span class="nx">messageId</span><span class="p">,</span>
  <span class="p">)),</span>
  <span class="nx">mergeMap</span><span class="p">(</span><span class="nx">CQRS</span><span class="p">.</span><span class="nx">execute$</span><span class="p">(</span><span class="nx">bus$</span><span class="p">)(</span><span class="nx">CQRS</span><span class="p">.</span><span class="nx">duck</span><span class="p">.</span><span class="nx">actions</span><span class="p">.</span><span class="nx">getSayablePayloadQueryResponse</span><span class="p">)),</span>
  <span class="c1">// Log `sayable` to console</span>
<span class="p">).</span><span class="nx">subscribe</span><span class="p">(</span><span class="nx">sayable</span> <span class="o">=&gt;</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="dl">'</span><span class="s1">Sayable:</span><span class="dl">'</span><span class="p">,</span> <span class="nx">sayable</span><span class="p">),</span>
<span class="p">)</span>

<span class="nx">bus$</span><span class="p">.</span><span class="nx">next</span><span class="p">(</span><span class="nx">CQRS</span><span class="p">.</span><span class="nx">duck</span><span class="p">.</span><span class="nx">actions</span><span class="p">.</span><span class="nx">startCommand</span><span class="p">(</span><span class="nx">wechaty</span><span class="p">.</span><span class="nx">puppet</span><span class="p">.</span><span class="nx">id</span><span class="p">))</span>
</code></pre></div></div>

<h2 id="getting-started">Getting Started</h2>

<p>Here’s a video introduction for CQRS Wechaty with live demo, presented by Huan:</p>

<p><a href="https://youtu.be/kauxyPVa0jo"><img src="/assets/2022/03-event-driven-wechaty-cqrs/cqrs-wechaty-getting-started.webp" alt="CQRS Wechaty Getting Started" /></a></p>

<blockquote>
  <p>YouTube: <a href="https://youtu.be/kauxyPVa0jo">https://youtu.be/kauxyPVa0jo</a></p>
</blockquote>

<p>The getting started <a href="https://github.com/wechaty/getting-started/blob/main/examples/cqrs/ding-dong-bot.ts">ding-dong-bot.ts</a>
in the video: <a href="https://github.com/wechaty/getting-started/blob/main/examples/cqrs/ding-dong-bot.ts">https://github.com/wechaty/getting-started/blob/main/examples/cqrs/ding-dong-bot.ts</a></p>

<h2 id="architectures">Architectures</h2>

<p><img src="/assets/2022/03-event-driven-wechaty-cqrs/cqrs-pattern.webp" alt="Command Query Responsibility Segregation (CQRS) Pattern" /></p>

<blockquote>
  <p>Image source: <a href="https://www.techtarget.com/searchapparchitecture/definition/CQRS-command-query-responsibility-segregation">CQRS (command query responsibility segregation)</a></p>
</blockquote>

<pre><code class="language-mermaid">graph LR
  classDef event fill:DarkGoldenRod
  classDef command fill:blue
  classDef query fill:green

  subgraph Command
    C(VerbNounCommand):::command
  end

  subgraph Response
    RC(VerbNounCommandResponse)
    RQ(GetNounQueryResponse)
  end
    
  subgraph Query
    Q(GetNounQuery):::query
  end

  subgraph Event
    ER(ReceivedEvent):::event
  end

  C--&gt;RC

  ER--&gt;ER

  Q--&gt;RQ
</code></pre>

<h3 id="command">Command</h3>

<pre><code class="language-mermaid">sequenceDiagram
    participant Bus
    participant Redux
    participant Wechaty

    Bus-&gt;&gt;Redux: ExecuteCommand
    Redux-&gt;&gt;Wechaty: Call
    Wechaty-&gt;&gt;Redux: Call Return (void)
    Redux-&gt;&gt;Bus: ExecuteCommandResponse
</code></pre>

<h3 id="query">Query</h3>

<pre><code class="language-mermaid">sequenceDiagram
    participant Bus
    participant Redux
    participant Wechaty

    Bus-&gt;&gt;Redux: GetNounQuery
    Redux-&gt;&gt;Wechaty: Call
    Wechaty-&gt;&gt;Redux: Call Return (value)
    Redux-&gt;&gt;Bus: GetNounQueryResponse
</code></pre>

<h3 id="event">Event</h3>

<pre><code class="language-mermaid">sequenceDiagram
    participant Bus
    participant Redux
    participant Wechaty

    Wechaty-&gt;&gt;Redux: ReceivedEvent
    Redux-&gt;&gt;Bus: ReceivedEvent
</code></pre>

<h2 id="api-reference">API Reference</h2>

<p>Read CQRS Wechaty API Reference at: <a href="https://paka.dev/npm/wechaty-cqrs">https://paka.dev/npm/wechaty-cqrs</a></p>

<h2 id="blogs">Blogs</h2>

<ul>
  <li><a href="https://wechaty.js.org/2022/02/27/refactoring-friday-bot-with-nestjs-ddd-cqrs/">Refactoring Friday BOT with NestJS, Domain-driven Design (DDD), and CQRS, @huan, Feb 27, 2022</a></li>
</ul>

<h2 id="resources">Resources</h2>

<ul>
  <li><a href="https://docs.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/ddd-oriented-microservice#layers-in-ddd-microservices">Layers in DDD microservices</a></li>
  <li>Effective Aggregate Design
    <ul>
      <li><a href="https://www.dddcommunity.org/wp-content/uploads/files/pdf_articles/Vernon_2011_1.pdf">Part I: Modeling a Single Aggregate</a></li>
      <li><a href="https://www.dddcommunity.org/wp-content/uploads/files/pdf_articles/Vernon_2011_2.pdf">Part II: Making Aggregates Work Together</a></li>
      <li><a href="https://www.dddcommunity.org/wp-content/uploads/files/pdf_articles/Vernon_2011_3.pdf">Part III: Gining Insight Through Discovery</a></li>
    </ul>
  </li>
  <li><a href="https://badia-kharroubi.gitbooks.io/microservices-architecture/content/patterns/tactical-patterns/domain-application-infrastructure-services-pattern.html">Domain-Application-Infrastructure Services pattern</a></li>
</ul>]]></content><author><name>huan</name></author><category term="announcement" /><category term="news" /><category term="cqrs" /><category term="ddd" /><category term="event-driven" /><summary type="html"><![CDATA[Command Query Responsibility Segregation (CQRS) is a software architecture pattern that separates the command(write) and query(read) layers. — CQRS, Martin Fowler, 14 July 2011]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/03-event-driven-wechaty-cqrs/cqrs-wechaty.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/03-event-driven-wechaty-cqrs/cqrs-wechaty.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Puppet-Whatsapp 1.0 Released!</title><link href="https://wechaty.js.org/2022/03/14/puppet-whatsapp-1.0-released/" rel="alternate" type="text/html" title="Puppet-Whatsapp 1.0 Released!" /><published>2022-03-14T00:00:00+00:00</published><updated>2022-03-14T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/03/14/puppet-whatsapp-1.0-released</id><content type="html" xml:base="https://wechaty.js.org/2022/03/14/puppet-whatsapp-1.0-released/"><![CDATA[<p><a href="https://github.com/wechaty/puppet-whstsapp"><code class="language-plaintext highlighter-rouge">Puppet-Whatsapp</code></a> has been published for more than a year, <a href="/2021/02/15/publishment-of-wechaty-whatsapp-puppet/">announcement here</a>, and it was still in alpha stage with only login and text message supported. Recently <a href="https://juzibot.com">Juzi.bot</a> was planning to support whatsapp in the web application, so we started working on the project.</p>

<p><a href="https://tech-blog.juzibot.com/zh/puppet-whatsapp-1.0-released">中文版</a></p>

<h2 id="primary-goals">Primary Goals</h2>

<p><strong><em>Make puppet-whatsapp to be enterprise beta ready</em></strong></p>

<p>To achieve this goal, <a href="https://juzibot.com">Juzi.bot</a> worked from below aspects:</p>

<ul>
  <li>improve code structure</li>
  <li>improve stability</li>
  <li>improve functionality</li>
</ul>

<h2 id="improve-code-structure">Improve code structure</h2>

<p>Code structure is also related to the application structure. Before we started, we looked into the code, and found that all the main code logic are written into a huge class called <code class="language-plaintext highlighter-rouge">PuppetWhatsapp</code>. This is okay for an alpha stage puppet, but the scalability and flexibility will be limited by the structure. To make sure we have an enterprise beta ready puppet, we need to have a better foundation. Based on the experience working on other puppets, we extract below components from the huge class:</p>

<ul>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/whatsapp/whatsapp-manager.ts"><code class="language-plaintext highlighter-rouge">WhatsappManager</code></a>: in charge of everything that connects to <code class="language-plaintext highlighter-rouge">whatsapp-web.js</code></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/tree/main/src/puppet-mixin">‘mixins’</a>: separate implementation of different entities’ into different mixins</li>
</ul>

<p>Besides, we also added a new manager layer to the <code class="language-plaintext highlighter-rouge">PuppetWhatsapp</code>. With a new <code class="language-plaintext highlighter-rouge">PuppetManager</code>, we are able to make the <code class="language-plaintext highlighter-rouge">PuppetWhatsapp</code> class with least logic, and most code are pretty short and easy to read.</p>

<h2 id="improve-stability">Improve stability</h2>

<p>Stability is really important for an enterprise ready puppet.</p>

<h3 id="login-session">Login Session</h3>

<p>The first step for stability project of a puppet is always keep the login session. Two advantage with an persistent login session:</p>

<ol>
  <li>easier for develop phase, since restart application won’t require a new scan login</li>
  <li>easier to maintain stability, when we encounter an unknown state that causes application hangs or crashes, we could confidently restart the application and automatically re-login, recover the application with minor down time</li>
</ol>

<p>So we spent a lot of time working on the login session. We’ve also found some issues in <code class="language-plaintext highlighter-rouge">whatsapp-web.js</code> project. To make sure we could finish <code class="language-plaintext highlighter-rouge">PuppetWhatsapp</code> within a reasonable time, we decide to fork the <code class="language-plaintext highlighter-rouge">whatsapp-web.js</code> and fix the problem, then raise PRs to <code class="language-plaintext highlighter-rouge">whatsapp-web.js</code> project.</p>

<h3 id="request-control">Request Control</h3>

<p><code class="language-plaintext highlighter-rouge">whatsapp-web.js</code> is using the <code class="language-plaintext highlighter-rouge">puppeteer</code> to control the whatsapp web application, so the api calling rate and amount needs to be considered, if we are making requests too frequent, the <code class="language-plaintext highlighter-rouge">puppeteer</code> might crash, if we are making too many requests, we might trigger the risk control mechanism of whatsapp. So request control is another key point to ensure stability.</p>

<p>To control the request sent to whatsapp application, there are two different ways, both are important:</p>

<ol>
  <li>programmatically limit the request rate</li>
  <li>use cache to reduce the get requests to whatsapp</li>
</ol>

<h4 id="request-manager">Request Manager</h4>

<p>We created a new class called <a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/request/request-manager.ts"><code class="language-plaintext highlighter-rouge">RequestManager</code></a> to handle all request related stuff, and within the <code class="language-plaintext highlighter-rouge">RequestManager</code>, we added another component called <a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/request/rate-manager.ts"><code class="language-plaintext highlighter-rouge">RateManager</code></a>, with <code class="language-plaintext highlighter-rouge">RateManager</code>, we are able to control the request rate separately for different apis, and also it provides a queue mechanism, so we can control the request rate better. For detailed code changes, please refer to <a href="https://github.com/wechaty/puppet-whatsapp/pull/279">this PR</a></p>

<h4 id="cache-manager">Cache Manager</h4>

<p>We created a new class called <a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/data/cache-manager.ts'"><code class="language-plaintext highlighter-rouge">CacheManager</code></a> to manager different caches. We use <a href="https://github.com/huan/flash-store"><code class="language-plaintext highlighter-rouge">flash-store</code></a> as the underlying data persistent library, which is actually an old friend of puppets.</p>

<p>With <code class="language-plaintext highlighter-rouge">CacheManager</code>, requests to get same contact or room will be served by cache, from previous experience, this will significant reduce the get requests to IMs.</p>

<h2 id="improve-functionality">Improve functionality</h2>

<p>The alpha version only supports login and text messages, which is too basic for an enterprise ready puppet. So we started to add more features to the <code class="language-plaintext highlighter-rouge">Puppet-Whatsapp</code>.</p>

<p>Refer to new Wechaty 1.0 mixin design, we decide to also use mixins to implement the new functions. We’ve added 7 mixins</p>

<ul>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/contact-self.ts">contact-self</a></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/contact.ts">contact</a></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/conversation.ts">conversation</a></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/friendship.ts">friendship</a></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/message.ts">message</a></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/room.ts">room</a></li>
  <li><a href="https://github.com/wechaty/puppet-whatsapp/blob/9d9db5d308e253d92dae085f32e9b4ffea6fac3f/src/puppet-mixin/tag.ts">tag</a></li>
</ul>

<p>Some of the mixin has only un-implemented methods, but they are placeholders for future implementations.</p>

<h2 id="thanks-to">Thanks To</h2>

<p>With all works described above, we’ve glad to announce the <code class="language-plaintext highlighter-rouge">Puppet-Whatsapp</code> 1.0 are launched!</p>

<p><img src="/assets/2022/03-puppet-whatsapp-1.0-released/launched.webp" alt="Open Source Win" /></p>

<p>Thanks to developers contributing to the project</p>

<ul>
  <li><a href="https://github.com/su-chang">SuperChang</a></li>
  <li><a href="https://github.com/hcfw007">NickWang</a></li>
  <li><a href="https://github.com/bung87">Bung</a></li>
  <li><a href="https://github.com/wedreamer">述不作</a></li>
  <li><a href="https://github.com/guo40020">Kelly</a></li>
</ul>

<p><img src="/assets/2022/03-puppet-whatsapp-1.0-released/kickoff.webp" alt="Open Source Win" /></p>

<h3 id="new-puppetwhatsapp-maintainers">New PuppetWhatsapp Maintainers</h3>

<p>To award the excellent contribution to <code class="language-plaintext highlighter-rouge">Puppet-Whatsapp</code>, author of Wechaty, <a href="https://github.com/huan">Huan</a>, announced two new <code class="language-plaintext highlighter-rouge">Puppet-Whatsapp</code> maintainers, they are <a href="https://github.com/su-chang">SuperChang</a> and <a href="https://github.com/hcfw007">NickWang</a>. And a Github T-shirt, a bag of Github stickers and a Github brooch were given as the maintainer gifts. Additionally, to reward <a href="https://github.com/su-chang">SuperChang</a>’s continuous contribution to Wechaty, a special edition Github cup was rewarded.</p>

<p><img src="/assets/2022/03-puppet-whatsapp-1.0-released/maintainer.webp" alt="Open Source Win" /></p>

<h2 id="reference">Reference</h2>

<p>Code base: <a href="https://github.com/wechaty/puppet-whatsapp">https://github.com/wechaty/puppet-whatsapp</a>
Main Issue: <a href="https://github.com/wechaty/puppet-whatsapp/issues/263">https://github.com/wechaty/puppet-whatsapp/issues/263</a></p>]]></content><author><name>windmemory</name></author><category term="announcement" /><category term="news" /><category term="open-source" /><category term="puppet" /><summary type="html"><![CDATA[Puppet-Whatsapp has been published for more than a year, announcement here, and it was still in alpha stage with only login and text message supported. Recently Juzi.bot was planning to support whatsapp in the web application, so we started working on the project.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/03-puppet-whatsapp-1.0-released/logo.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/03-puppet-whatsapp-1.0-released/logo.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">中国开源超级码力榜权威发布 | Wechaty 创始人排名 TOP 7</title><link href="https://wechaty.js.org/2022/03/03/opensource-win-github-ranking-huan-007/" rel="alternate" type="text/html" title="中国开源超级码力榜权威发布 | Wechaty 创始人排名 TOP 7" /><published>2022-03-03T00:00:00+00:00</published><updated>2022-03-03T00:00:00+00:00</updated><id>https://wechaty.js.org/2022/03/03/opensource-win-github-ranking-huan-007</id><content type="html" xml:base="https://wechaty.js.org/2022/03/03/opensource-win-github-ranking-huan-007/"><![CDATA[<p>“开源”是 2021 中国技术发展的年度热词，越来越多人关注开源、贡献开源。然而，谈到中国的开源盛况，却有人提出了不同的观点：</p>

<ul>
  <li>开源布道师李建盛老师（适兕）曾在一次专访中表示 <a href="https://mp.weixin.qq.com/s/YJN7wYX6kk9ZhHkP66zHZA">“真实的开源世界依旧冷清”</a>，鼓励大家“要到开源真正发生的地方里去。”
我们也收到了不少社区开发者的反馈 —— 热闹的背后，究竟有多少来自中国的开发者在贡献代码？如何能帮助在开源社区中贡献代码的开发者们也被更多人认识？</li>
  <li>在和一众开源老友的讨论后，SegmentFault 思否计划联合开源社、腾源会、X-Lab 实验室发起一个全新的、专属于开源开发者的榜单 —— 中国开源码力榜，通过 GitHub 开发者协作影响力进行排名、评选。</li>
</ul>

<p>来自 X-Lab 的 OpenDigger 团队对 GitHub 开放的归档日志进行分析，筛选出了 2021 全年 GitHub 协作影响力排名前 10,000 的账号，并号召了社区中数十位开发者及十余家合作社区，通过开放式协作共同核实标注信息、排除机器人账号，第一阶段甄选出了 99 位中国开发者。</p>

<h2 id="码不停蹄赢">码不停蹄，赢！</h2>

<p><img src="/assets/2022/03-opensource-win-github-ranking-huan-007/winners.webp" alt="Open Source Win" /></p>

<p>他们在为这些项目贡献（排名不分先后）</p>

<blockquote>
  <p>Azure, KubeSphere, Ant Design, Flutter, Hyperf, Swoole, Apache SkyWalking, Apache Airflow, RT-Thread,Apache APISIX, DeepModeling, vant, PyO3, DolphinScheduer, Kubernetes, TiDB, TiKV, Engula, Apache Echarts, OpenResty, PaddlePaddle, Apache Dubbo, MobX, Deepin, Wechaty, TDengine, Apache Camel, ice, AntVis, Apache IoTDB, Aapche EventMesh (Incubating), ClickHouse, Apache InLong (Incubating)</p>
</blockquote>

<ul>
  <li>访问<a href="https://opensource.win/">项目官网</a>了解上榜开发者项目贡献详情</li>
</ul>

<h2 id="wechaty-创始人名列前茅">Wechaty 创始人名列前茅</h2>

<p>Wechaty 创始人 <a href="https://opensource.win/huan">Huan(李卓桓)</a> 排名全球 TOP 450 ，中国 TOP 7 ：</p>

<p><a href="https://opensource.win/huan"><img src="/assets/2022/03-opensource-win-github-ranking-huan-007/opensource-win-huan.webp" alt="Wechaty Huan" /></a></p>

<h2 id="关于中国开源码力榜">关于中国开源码力榜</h2>

<p>中国开源码力榜是由 SegmentFault 思否、开源社、腾源会、X-lab 实验室共同发起的中国开源开发者榜单。</p>

<p>来自 X-lab 的 OpenDigger 团队对 GitHub 开放的归档日志进行分析，筛选出了 2021 全年 GitHub 协作影响力排名前 10,000 的账号，并号召了社区中数十位开发者及十余家合作社区，通过开放式协作共同核实标注信息、排除机器人账号，第一阶段选出了 99 位中国开发者。</p>

<p>榜单发布后，我们收到社区反馈，新增了一位符合标准的来自中国的“开源码丽”Huan (李卓桓)，也请开源世界的每一位开发者通过 Github 项目地址能积极的向我们反馈，我们会不间断的进行更新。</p>

<p>通过中国开源码力榜，我们希望开源世界的超级码丽、开源项目背后的开发者们可以被更多人知道、认识和 respect。让更多人关注开源、关注开源开发者成长。</p>

<ul>
  <li>项目地址：<a href="https://github.com/OpenSourceWin">https://github.com/OpenSourceWin</a></li>
  <li>项目官网：<a href="http://opensource.win/">http://opensource.win/</a></li>
</ul>

<h2 id="评选标准">评选标准</h2>

<ol>
  <li>开发者影响力基于 GitHub 全域开发者活跃数据计算得到。</li>
  <li>影响力计算使用了开发者与项目之间的活动关联与图算法计算获得。</li>
  <li>计算影响力的基本主张为：更有影响力的开发者在 GitHub 上更加活跃、更有影响力的开发者更倾向于参与到更有影响力的项目中、更有影响力的项目会吸引到更多更有影响力的开发者参与。</li>
  <li>第一阶段开源码力榜收录来自中国的协作影响力排名 Top 99 位的开发者，开发者归属地主要依据其 GitHub 上公开的地理位置信息及志愿者手工标注辨别，如有错漏欢迎来 GitHub 向我们反馈。</li>
</ol>

<p>项目地址：<a href="https://github.com/OpenSourceWin">https://github.com/OpenSourceWin</a></p>

<h2 id="合作伙伴">合作伙伴</h2>

<p><img src="/assets/2022/03-opensource-win-github-ranking-huan-007/cover.webp" alt="Open Source Wechaty" /></p>

<p><img src="/assets/2022/03-opensource-win-github-ranking-huan-007/brands.webp" alt="brands" /></p>

<blockquote>
  <p>Source: <a href="https://segmentfault.com/a/1190000041478447">来自开源世界的超级码丽，中国开源码力榜权威发布, SegmentFault思否, Mar 1, 2022</a></p>
</blockquote>]]></content><author><name>huan</name></author><category term="announcement" /><category term="news" /><category term="open-source" /><summary type="html"><![CDATA[“开源”是 2021 中国技术发展的年度热词，越来越多人关注开源、贡献开源。然而，谈到中国的开源盛况，却有人提出了不同的观点：]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://wechaty.js.org/assets/2022/03-opensource-win-github-ranking-huan-007/opensource-super-mario.webp" /><media:content medium="image" url="https://wechaty.js.org/assets/2022/03-opensource-win-github-ranking-huan-007/opensource-super-mario.webp" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>